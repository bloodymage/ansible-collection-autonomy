---
# ==================================================================================================
#
# Gather some information.  This is always done, as it'll create groups used later in this playbook.
#
# ==================================================================================================
- name: "Configure the environment for basic host configuration."
  hosts: all:!localhost
  ignore_unreachable: yes
  roles:
    - role: bloodymage.autonomy.config_environment
      tags:
        - always

# ==================================================================================================
#
# Configure setting applicable to ALL hosts.
#
# ==================================================================================================
- name: "Basic host configuration for all hosts."
  hosts: all:!localhost:!wifi_access_points:!printers:!public_zone:!virtual_hosts
  strategy: linear
  roles:
    - role: bloodymage.autonomy.hostname
      when:
        - autonomy_virtual_host is falsy
        - ansible_connection != "local"
      tags:
        - hostname
    - role: bloodymage.autonomy.system_upgrade
      when:
        - autonomy_virtual_host is falsy
        - ansible_connection != "local"
      tags:
        - system_upgrade
        - system-upgrade

# ==================================================================================================
#
# Configure settings applicable based on OS:
#   - Linux
#   - Windows
#
# ==================================================================================================
- name: "Linux Host SSH configuration."
  hosts: linux:!localhost:!routeros:!wifi_access_points:!printers:!public_zone:!virtual_hosts
  strategy: linear
  roles:
    - role: bloodymage.autonomy.sshca_host_certs
      when:
        - ansible_connection != "local"
    - role: bloodymage.autonomy.openssh
      when:
        - ansible_connection != "local"
      tags:
        - openssh

# ==================================================================================================
#
# Additional basic configuration for all hosts.
#
# ==================================================================================================
- name: "Basic host configuration for all hosts."
  hosts: all:!localhost:!wifi_access_points:!printers:!public_zone:!virtual_hosts
  roles:
    - role: bloodymage.autonomy.users
      when:
        - autonomy_virtual_host is falsy
        - ansible_connection != "local"
      tags:
        - users
    - role: bloodymage.autonomy.hosts
      when:
        - ansible_network_os is not defined
        - ansible_connection != "local"
      tags:
        - hosts
    - role: bloodymage.autonomy.emacs
      when:
        - autonomy_enable_emacs
        - ansible_connection != "local"
        - ansible_network_os is not defined
      tags:
        - emacs
    - role: bloodymage.autonomy.git
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
      tags:
        - git
    - role: bloodymage.autonomy.unzip
      when:
        - ansible_connection != "local"
        - (autonomy_dodca_install or autonomy_enable_unzip)
        - ansible_network_os is not defined
      tags:
        - unzip

- name: "Install certificates on all hosts."
  hosts: all:!localhost:!public_zone
  roles:
    - role: bloodymage.autonomy.ownca_host_certs
      tags:
        - regenerate-ownca
        - ownca
        - ownca_host_certs
        - ownca-host-certs
        - ownca_host_certificates
        - ownca-host-certificates
    - role: bloodymage.autonomy.dodca
      when:
        - ansible_connection != "local"
        - autonomy_dodca_install
      tags:
        - dodca

# ==================================================================================================
#
# Finish up settings based on OS:
#
# ==================================================================================================
- name: "Basic settings for all Linux hosts."
  hosts: linux:!localhost:!wifi_access_points:!printers
  strategy: linear
  roles:
    - role: bloodymage.autonomy.etc_fstab
      when:
        - ansible_connection != "local"
        - autonomy_virtual_host is falsy
        - ansible_network_os is not defined
        - autonomy_fstab is truthy
      tags:
        - fstab
    - role: bloodymage.autonomy.nftables
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - nftables
    - role: bloodymage.autonomy.fail2ban
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - fail2ban
    - role: bloodymage.autonomy.etc_timezone
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - timezone
    - role: bloodymage.autonomy.unattended_upgrades
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - unattended-upgrades
    - role: bloodymage.autonomy.sudo
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - sudo
    - role: bloodymage.autonomy.skel
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - skel
    - role: bloodymage.autonomy.user_dotfiles
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - dotfiles
        - user-dotfiles
        - user_dotfiles
    - role: bloodymage.autonomy.etckeeper
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
        - autonomy_enable_etckeeper
      tags:
        - etckeeper
    #- role: bloodymage.autonomy.polkit
    #  tags:
    #    - polkit
    - role: bloodymage.autonomy.screen
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
        - autonomy_enable_screen
      tags:
        - screen
    - role: bloodymage.autonomy.rsync
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - rsync
    - role: bloodymage.autonomy.curl
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - curl
    - role: bloodymage.autonomy.keychain
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
        - autonomy_enable_keychain
      tags:
        - keychain
    - role: bloodymage.autonomy.man
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - man
    - role: bloodymage.autonomy.rename
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - rename
    - role: bloodymage.autonomy.members
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - members
    - role: bloodymage.autonomy.bash_completion
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - bash-completion
    - role: bloodymage.autonomy.ispell
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - ispell
    - role: bloodymage.autonomy.make
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - make
    - role: bloodymage.autonomy.uptimed
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
        - autonomy_enable_uptimed
      tags:
        - uptimed
    - role: bloodymage.autonomy.htop
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - htop
    - role: bloodymage.autonomy.python
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - python
    - role: bloodymage.autonomy.cron
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
      tags:
        - cron
    - role: bloodymage.autonomy.trash_cli
      when:
        - ansible_connection != "local"
        - ansible_network_os is not defined
        - autonomy_virtual_host is falsy
        - autonomy_enable_trash_cli
      tags:
        - trash-cli
    - role: bloodymage.autonomy.ownca
      vars:
        __ownca_tasks: "dhparams"
      when:
        - ansible_connection != "local"
      tags:
        - ownca-host-dhparams
        - ownca-dhparams

# ==================================================================================================
#
# Finally, we configure settings based on OS Distribution Family:
#
# - Debian
#
# Planned edition:
#   - arch
#   - gentoo
#   - redhat
#
# Note:
#  - "!routeros" is included because otherwise Mikrotik routers are included.
#  - "!wifi_access_points" is included because otherwise TP-Link EAP devices are included.
#
# ==================================================================================================
- name: "Basic settings for Debian Family Hosts."
  hosts: debian:!localhost:!wifi_access_points:!printers
  roles:
    - role: bloodymage.autonomy.aptitude
      when:
        - ansible_connection != "local"
        - autonomy_virtual_host is falsy
        - ansible_network_os is not defined
      tags:
        - aptitude
