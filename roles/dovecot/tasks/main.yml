---
# tasks file for mail-server
# ==================================================================================================
#
# Task: Install apps
#
# ==================================================================================================
- name: "Pretasks"
  block:
    - name: Include OS-specific variables.
      include_vars: "{{ lookup('first_found', params) }}"
      vars:
        params:
          files: "{{ __os_variables_files }}"
          paths:
            - "vars"
      become: no
      tags:
        - dovecot
        - dovecot_debug
        - dovecot-debug
        - install-packages

    - name: "Install packages"
      ansible.builtin.package:
        name: "{{ packages }}"
        state: present
      become: yes
      tags:
        - dovecot
        - dovecot_debug
        - dovecot-debug
        - install-packages

- name: "Update password and auth mechanims"
  ansible.builtin.set_fact:
    dovecot_password_databases: "{{ dovecot_password_databases + ['ldap'] }}"
    dovecot_auth_mechanisms: "{{ ['gssapi'] + dovecot_auth_mechanisms + ['oauthbearer xoauth2'] }}"
    dovecot_auth_conf: "{{ dovecot_auth_conf + [dovecot_auth_conf_ldap] + [dovecot_auth_conf_oauth2] }}"
  become: no
  when:
    - rebeldream_realm_identity_management_system == "samba"
  tags:
    - dovecot
    - dovecot_debug
    - dovecot-debug
    - install-packages

- name: "Get Users' password from password-store"
  ansible.builtin.set_fact:
    __mail_user: "{{ mail_user }}"
    __mail_user_password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  vars:
    __password_store_id: "{{ rebeldream_domain }}/domain_users/{{ mail_user }}/password"
    __password_lookup: "{{ __password_store_id }}"
  #no_log: yes
  become: no
  delegate_to: localhost
  register: domain_user_list
  tags:
    - dovecot
    - dovecot_debug
    - dovecot-debug

# ==================================================================================================
#
# Configuration tasks
#
# ==================================================================================================
- name: "Install config files to /etc/dovecot"
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/dovecot/{{ item }}"
    owner: "root"
    group: "root"
    mode: "0644"
  loop:
    - dovecot.conf
    #- "{{ dovecot_password_file }}"
  become: yes
  notify: restart dovecot
  tags:
    - dovecot
    - dovecot_debug
    - dovecot-debug

- name: "Install auth config files to /etc/dovecot"
  ansible.builtin.template:
    src: "dovecot-{{ item.name }}.conf.ext.j2"
    dest: "/etc/dovecot/dovecot-{{ item.name }}.conf.ext"
    owner: "root"
    group: "root"
    mode: "0644"
  loop: "{{ dovecot_auth_conf }}"
  become: yes
  notify: restart dovecot
  when:
    - item.name != "system"
    - item.name != "deny"
  tags:
    - dovecot
    - dovecot_debug
    - dovecot-debug

- name: "Install configuration files to /etc/dovecot/conf.d"
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/dovecot/conf.d/{{ item }}"
    owner: "root"
    group: "root"
    mode: "0644"
  become: yes
  loop:
    - 10-auth.conf
    - 10-director.conf
    - 10-logging.conf
    - 10-mail.conf
    - 10-master.conf
    - 10-ssl.conf
    - 10-tcpwrapper.conf
    - 15-lda.conf
    - 15-mailboxes.conf
    - 20-imap.conf
    - 20-lmtp.conf
    - 20-managesieve.conf
    - 90-acl.conf
    - 90-plugin.conf
    - 90-quota.conf
    - 90-sieve-extprograms.conf
    - 90-sieve.conf
    - auth-checkpassword.conf.ext
    - auth-dict.conf.ext
    - auth-master.conf.ext
    - auth-static.conf.ext
    - auth-vpopmail.conf.ext
  notify: restart dovecot
  tags:
    - dovecot
    - dovecot_debug
    - dovecot-debug

- name: "Install authorization configuration files to /etc/dovecot/conf.d"
  ansible.builtin.template:
    src: "auth.conf.j2"
    dest: "/etc/dovecot/conf.d/auth-{{ item.name }}.conf.ext"
    owner: "root"
    group: "root"
    mode: "0644"
  become: yes
  loop: "{{ dovecot_auth_conf }}"
  notify: restart dovecot
  tags:
    - dovecot
    - dovecot_debug
    - dovecot-debug

- name: "Ensure Virtual Directory definitions exist"
  ansible.builtin.file:
    path: "/etc/dovecot/virtual/{{ item.name }}"
    owner: "{{ mail_user }}"
    group: "{{ mail_user }}"
    mode: "0755"
    state: directory
  become: yes
  loop: "{{ dovecot_virtual_mailboxes }}"
  tags:
    - dovecot
    - dovecot_debug
    - dovecot-debug

- name: "Install configuration files to /etc/dovecot/virtual"
  ansible.builtin.template:
    src: "dovecot-virtual.j2"
    dest: "/etc/dovecot/virtual/{{ item.name }}/dovecot-virtual"
    owner: "root"
    group: "root"
    mode: "0644"
  become: yes
  loop: "{{ dovecot_virtual_mailboxes }}"
  tags:
    - dovecot
    - dovecot_debug
    - dovecot-debug

- name: "Ensure Sieve Pipe Bin Dir exists"
  ansible.builtin.file:
    path: "{{ dovecot_sieve_pipe_bin_dir }}"
    owner: "{{ mail_user }}"
    group: "{{ mail_user }}"
    mode: "0755"
    state: directory
  become: yes
  tags:
    - dovecot
    - dovecot_debug
    - dovecot-debug

- name: "Install IMAPSieve Spam Update Filters"
  ansible.builtin.template:
    src: "report-sieve.j2"
    dest: "{{ dovecot_sieve_pipe_bin_dir }}/report-{{ item.type }}.sieve"
    owner: root
    group: root
    mode: 0644
  become: yes
  loop: "{{ dovecot_imapsieve_mailboxes }}"
  tags:
    - dovecot
    - dovecot_debug
    - dovecot-debug

- name: "Install IMAPSieve Spam Update Filters"
  ansible.builtin.template:
    src: "sa-learn.j2"
    dest: "{{ dovecot_sieve_pipe_bin_dir }}/sal-learn-{{ item.type }}.sh"
    owner: "root"
    group: "root"
    mode: "0755"
  become: yes
  loop: "{{ dovecot_imapsieve_mailboxes }}"
  tags:
    - dovecot
    - dovecot_debug
    - dovecot-debug
