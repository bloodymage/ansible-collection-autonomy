---
# tasks file for config_realm_environment
- name: "Determine whether to force domain recreation"
  ansible.builtin.set_fact:
    __samba_recreate_realm: yes
  become: no
  changed_when: __samba_recreate_realm
  tags:
    - never
    - recreate-realm

- name: "Set Samba Schema Master to Running Schema Master (Only if not regenerating realm)"
  ansible.builtin.command:
    cmd: "samba-tool fsmo show"
  register: __samba_schema_master_role
  run_once: yes
  become: yes
  when:
    - not __samba_recreate_realm
    - inventory_hostname in groups['samba_domain_controllers']
  tags:
    - always

- name: Set Samba Schema Master if domain exists
  ansible.builtin.set_fact:
    __samba_schema_master: "{{ __samba_schema_master_list | join('.') }}"
  become: no
  vars:
    __samba_schema_master_list:
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[1].split('=')[1] | lower }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[6].split('=')[1] | lower }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[7].split('=')[1] | lower }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[8].split('=')[1] | lower }}"
  when:
    - __samba_schema_master_role is defined
    - __samba_schema_master_role.stdout_lines is defined
  tags:
    - always

- name: "Create Samba Schema Master Group."
  add_host:
    name: "{{ __samba_schema_master }}"
    groups:
      - samba_schema_master
  tags:
    - always

- name: "Add full details to realm users."
  ansible.builtin.set_fact:
    __realm_users: "{{ __realm_users + [ __user ] }}"
  vars:
    __user:
      username: "{{ __username }}"
      groupname: "{{ item.groupname | default(omit) }}"
      given_name: "{{ __given_name | default(item.username) }}"
      nickname: "{{ item.nickname | default(omit) }}"
      middle_name: "{{ item['middle_name'] | default(omit) }}"
      surname: "{{ item['surname'] | default(omit) }}"
      full_name: "{{ __full_name }}"
      initials: "{{ __initials | default(omit) }}"
      country: "{{ item.country | default(omit) }}"
      state: "{{ item.state | default(omit) }}"
      city: "{{ item.city | default(omit) }}"
      zip_code: "{{ item.zip_code | default(omit) }}"
      job_title: "{{ item.job_title | default(omit) }}"
      mobile: "{{ item.mobile | default(omit) }}"
      urls: "{{ item.urls | default(omit) }}"
      internet_address: "{{ item.internet_address | default(omit) }}"
      mail: "{{ __mail }}"
      id_number: "{{ item.id_number | default(omit) }}"
      email_aliases: "{{ item.email_aliases | default(omit) }}"
      physical_delivery_office: "{{ item.physical_delivery_office | default(omit) }}"
      company: "{{ item.company | default(omit) }}"
      display_name: "{{ __display_name }}"
      # carLicense:
      # homePhone:
      # otherHomePhone:
      # facsimileTelephoneNumber:
      # otherFacsimile:
      # ipPhone:
      # otherIpPhone:
      # info:
      # employeeID:
      # employeeType:
      # employeeNumber:
      division: "{{ item.division | default(omit) }}"
      # roomNumber:
      # cn:
      department: "{{ item['department'] | default(omit) }}"
      # description:
      organization: "{{ item.organization | default(omit) }}"
      organizational_unit: "{{ item.organizational_unit | default(omit) }}"
      #otherMobile:
      #otherPager:
      #otherTelephone:
      #ou:
      #pager:
      # postOfficeBox:
      # proxyAddresses:
      # streetAddress:
      # telephoneNumber:
      ssh_access_cert: "{{ item.ssh_access_cert | default(omit) }}"
      ssh_principals: "{{ item.ssh_principals | default(omit) }}"
      gpg_keys: "{{ item.gpg_keys | default(omit) }}"
    __given_name: "{{ item.given_name | default(item.username) }}"
    __middle_name: "{{ item.middle_name | default(None) }}"
    __surname: "{{ item.surname | default(None) }}"
    __nickname: "{{ item.nickname | default(__given_name) }}"
    __callsign: "{{ item.callsign | default(None) }}"
    __identified_initials: "{{ __given_name[0] }}{{ __middle_name[0] | default(None) }}{{ __surname[0] | default(None) }}"
    __initials: "{{ item.initials | default(__identified_initials) }}"
    __middle_initial: "{{ __middle_name[0] | default(None) }}"
    __full_middle_name: "{% if __middle_name is truthy %}{{ ' ' + __middle_name }}{% else %}{{ '' }}{% endif %}"
    __full_middle_initial: "{% if __middle_initial is truthy %}{{ ' ' + __middle_initial }}{% else %}{{ '' }}{% endif %}"
    __full_surname: "{% if __surname is truthy %} {{ __surname }}{% else %}{{ '' }}{% endif %}"
    __full_callsign: '{% if __callsign is truthy %} "{{ __callsign }}"{% else %}{{ "" }}{% endif %}'
    __full_middle_part: "{% if __callsign is truthy %}{{ __full_callsign }}{% else %}{{ __full_middle_name }}{% endif %}"
    __display_middle_part: "{% if __callsign is truthy %}{{ __full_callsign }}{% else %}{{ __full_middle_initial }}{% endif %}"
    __full_name: "{{ __given_name }}{{ __full_middle_part }}{{ __full_surname }}"
    __display_name: "{{ __nickname }}{{ __display_middle_part }}{{ __full_surname | default(None) }}"
    __autonomy_organization: "{{ autonomy_org_name | title }}"
    __autonomy_org_unit_name: "{{ autonomy_org_unit_name | title }}"
    __hash_string: "{{ __display_name }} {{ __autonomy_organization }} {{ __autonomy_org_unit_name }}"
    __hash: "{{ __hash_string | hash('sha1') }}"
    __full_generated_username: "{{ __initials | lower }}{{ __hash }}"
    __generated_username: "{{ __full_generated_username | truncate(8, True, '') }}"
    __username: "{{ item.username | default(__generated_username) }}"
    __default_mail: "{{ __username }}@{{ autonomy_root_domain }}"
    __mail: "{{ item.mail | default(__default_mail) }}"
  loop: "{{ domain_users }}"
  delegate_to: localhost
  run_once: yes
  tags:
    - always

# - name: "Get domain mail user spns."
#   ansible.builtin.set_fact:
#     __domain_mail_user_spns:
#   loop: "{{ domain_mail_user_spns }}"
#   vars:
#     __spns:
#       spn: "{{ item.spn }}"

# - name: "Add system users"
#   ansible.builtin.set_fact:
#     __domain_system_users: "{{ __domain_system_users + [__user] }}"
#   loop: "{{ __default_domain_system_users | product(__domain_system_user_spns) }}"
#   vars:
#     __user:
#       username: "{{ item[0]['username'] }}"
#       spns:
#         - spn: "{{ item[1].spn }}"
#           hostname: "{{ item[1]
#       keytab_file: "{{ item[0]['keytab_file'] }}"
#       account_expiry: "{{ item[0]['account_expiry'] }}"
#   when:
#     - groups["samba_domain_controllers"] is defined
#     - groups[item.name] is defined
#   delegate_to: localhost
#   run_once: yes
