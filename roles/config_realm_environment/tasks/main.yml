---
# tasks file for config_realm_environment
- name: "Set default domain recreation variable to 'no'"
  ansible.builtin.set_fact:
    __samba_recreate_realm: no
  become: no
  tags:
    - always

- name: "Determine whether to force domain recreation"
  ansible.builtin.set_fact:
    __samba_recreate_realm: yes
  become: no
  tags:
    - never
    - recreate-realm

- name: "Print Samba Schema Master Role"
  ansible.builtin.debug:
    msg:
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[1].split('=')[1] }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[6].split('=')[1] }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[7].split('=')[1] }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[8].split('=')[1] }}"
    verbosity: 1
  become: no
  when:
    - __samba_schema_master_role is defined
  tags:
    - never
    - debug

- name: "Print Variables"
  ansible.builtin.debug:
    msg:
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[0] }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[1] }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[2] }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3] }}"
    verbosity: 2
  become: no
  when:
    - __samba_schema_master_role is defined
  tags:
    - never
    - debug

- name: Print Variables
  ansible.builtin.debug:
    var: __samba_schema_master_role.stdout_lines[0]
    verbosity: 3
  become: no
  when:
    - __samba_schema_master_role is defined
  tags:
    - never
    - debug

- name: Print Variables
  ansible.builtin.debug:
    var: __samba_schema_master_role.stdout_lines
    verbosity: 4
  become: no
  when:
    - __samba_schema_master_role is defined
  tags:
    - never
    - debug

- name: Print Variables
  ansible.builtin.debug:
    var: __samba_schema_master_role
    verbosity: 4
  become: no
  when:
    - __samba_schema_master_role is defined
  tags:
    - never
    - debug

- name: "Set Samba Schema Master to Running Schema Master (Only if not regenerating realm)"
  ansible.builtin.command:
    cmd: "samba-tool fsmo show"
  register: __samba_schema_master_role
  run_once: yes
  become: yes
  when:
    - not __samba_recreate_realm
    - inventory_hostname in groups['samba_domain_controllers']
  tags:
    - always

- name: Set Samba Schema Master if domain exists
  ansible.builtin.set_fact:
    __samba_schema_master: "{{ __samba_schema_master_list | join('.') }}"
  become: no
  vars:
    __samba_schema_master_list:
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[1].split('=')[1] | lower }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[6].split('=')[1] | lower }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[7].split('=')[1] | lower }}"
      - "{{ __samba_schema_master_role.stdout_lines[0].split(' ')[3].split(',')[8].split('=')[1] | lower }}"
  when:
    - __samba_schema_master_role is defined
    - __samba_schema_master_role.stdout_lines is defined
  tags:
    - always

- name: "Create Samba Schema Master Group"
  add_host:
    name: "{{ __samba_schema_master }}"
    groups:
      - samba_schema_master
  tags:
    - always
