---
# ======================================================================
#
# Tasks:
#
#
# ======================================================================
- name: Include OS-specific variables.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files: "{{ __os_variables_files }}"
      paths:
        - "vars"
  become: no
  tags:
    - openssh
    - openssh_debug
    - openssh-debug
    - install-packages

- name: "Install packages"
  ansible.builtin.package:
    name: "{{ autonomy_packages }}"
    state: present
  become: yes

# ==================================================================================================
#
# Tasks:
#
#
# ==================================================================================================
- name: Create Required Directories for Cert authorization.
  ansible.builtin.file:
    name: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: yes
  loop:
    - "{{ sshca_cert_directory }}"
    - "{{ sshca_authorized_principals_dir }}"

- name: Install Host CA Certificate on Hosts
  ansible.builtin.copy:
    src: "{{ sshca_key_directory }}/{{ sshca_host_pubfile }}"
    dest: "{{ sshca_hostca_certificate }}"
    owner: root
    group: root
    mode: '0644'
  become: yes
  notify: restart ssh

- name: Install User CA Certificate on Hosts
  ansible.builtin.copy:
    src: "{{ sshca_key_directory }}/{{ sshca_user_pubfile }}"
    dest: "{{ sshca_userca_certificate }}"
    owner: root
    group: root
    mode: '0644'
  become: yes
  notify: restart ssh

# ==================================================================================================
#
# This variable is needed for generating /etc/ssh/ssh_known_hosts
#
# ==================================================================================================
- name: "Get Host CA public key"
  ansible.builtin.set_fact:
    __openssh_host_ca_public_key: "{{ lookup('file', sshca_key_directory + '/' + sshca_host_pubfile) }}"
  delegate_to: localhost
  run_once: yes
  become: no

- name: "Install Configuration files"
  ansible.builtin.template:
    src: "{{ item.name }}.j2"
    dest: "{{ ssh_config_dir }}/{{ item.name }}"
    owner: root
    group: root
    mode: "{{ item.mode | default('0644') }}"
    validate: "{{ item.validate | default(none) }}"
    backup: yes
  become: yes
  loop: "{{ openssh_config_files }}"
  notify: restart ssh
