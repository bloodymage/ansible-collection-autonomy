---
# ==================================================================================================
#
# OS Specific Setup
#
#
# ==================================================================================================
- name: "Pre-tasks"
  block:
    - name: "Include OS-specific variables."
      include_vars: "{{ lookup('first_found', params) }}"
      vars:
        params:
          files: "{{ __os_variables_files }}"
          paths:
            - "vars"
      become: no
      tags:
        - bind
        - bind_debug
        - bind-debug
        - install-packages

    - name: "Install packages."
      ansible.builtin.package:
        name: "{{ autonomy_packages }}"
        state: present
      become: yes
      tags:
        - bind
        - bind_debug
        - bind-debug
        - install-packages

# ==================================================================================================
#
# Set Variables
#
# ==================================================================================================
- name: "Check bind version."
  ansible.builtin.debug:
    msg:
      - "{{ ansible_facts.packages['bind9'][0]['version'] }}"
  when: "'bind9' in ansible_facts.packages"

- name: "Query DNS for zone SOA."
  ansible.builtin.set_fact:
    __zone_soa: "{{ lookup('community.general.dig', bind_zone + '/SOA') }}"
    __zone_all: "{{ lookup('community.general.dig', bind_zone, 'qtype=NS', wantlist=True) }}"
  become: no
  when:
    - bind_zone is defined
  tags:
    - bind
    - bind_debug
    - bind-debug

- name: "Query DNS for reverse zone SOA."
  ansible.builtin.set_fact:
    __reverse_zone_soa: "{{ lookup('community.general.dig', bind_reverse_zone + '/SOA') }}"
    __reverse_zone_all: "{{ lookup('community.general.dig', bind_reverse_zone, 'qtype=NS', wantlist=True) }}"
  become: no
  when:
    - bind_reverse_zone is defined
  tags:
    - bind
    - bind_debug
    - bind-debug

- name: "Get Forward Zone's Current Serial Number."
  ansible.builtin.set_fact:
    __zone_current_serial_number: "{{ __zone_soa.split(' ')[2] }}"
  become: no
  when:
    - __zone_soa is defined
  tags:
    - bind
    - bind_debug
    - bind-debug

- name: "Get Reverse Zone's Current Serial Number."
  ansible.builtin.set_fact:
    __reverse_zone_current_serial_number: "{{ __reverse_zone_soa.split(' ')[2] | default(bind_reverse_zone_serial_number) }}"
  become: no
  when:
    - __reverse_zone_soa is defined
  tags:
    - bind
    - bind_debug
    - bind-debug

- name: "Set new Forward Zone Serial Number."
  ansible.builtin.set_fact:
    bind_zone_serial_number: "{{ __zone_current_serial_number | int + 1 }}"
  become: no
  when:
    - __zone_current_serial_number is defined
    - __zone_current_serial_number >= bind_zone_serial_number
  tags:
    - bind
    - bind_debug
    - bind-debug

- name: "Set new Reverse Zone Serial Number."
  ansible.builtin.set_fact:
    bind_reverse_zone_serial_number: "{{ __reverse_zone_current_serial_number | int + 1 }}"
  become: no
  when:
    - __reverse_zone_current_serial_number is defined
    - __reverse_zone_current_serial_number >= bind_reverse_zone_serial_number
  tags:
    - bind
    - bind_debug
    - bind-debug

- name: "Check new serial number."
  ansible.builtin.debug:
    msg:
      - "Current Serial Number: {{ __zone_current_serial_number }}"
      - "New Serial Number:     {{ bind_zone_serial_number }}"
    verbosity: 1
  become: no
  when:
    - __zone_current_serial_number is defined
  tags:
    - never
    - bind_debug
    - bind-debug

# ==================================================================================================
#
# Generate DNSSEC keys
#
# tasks/dnssec-keygen.yml
# Generate DNSSEC key, inspired by Michele Salerno (@mikysal78)
#
# ==================================================================================================
# - name: DNSSEC keygen | Ensure keys directory is present
#   file:
#     path: "{{ bind_dnssec_key_dir }}"
#     state: directory
#     owner: "{{ bind_owner }}"
#     group: "{{ bind_group }}"
#     mode: '0750'
#   tags:
#     - bind
#     - bind-dnssec

# - name: DNSSEC keygen | Create key file for each zone (This may take a long time)
#     shell: >-
#         dnssec-keygen -a HMAC-MD5 -b 512 -n HOST "{{ item.name }}"
#     args:
#       chdir: "{{ bind_dnssec_key_dir }}"
#     creates:
#       - "K{{ item.name }}.+[0-9][0-9][0-9].+[0-9][0-9][0-9][0-9][0-9].key"
#       - "K{{ item.name }}.+[0-9][0-9][0-9].+[0-9][0-9][0-9][0-9][0-9].private"
#     loop:
#       - "{{ bind_zone_domains }}"
#     tags:
#       - bind
#       - bind-dnssec

# - name: DNSSEC keygen | Ensure proper permissions on DNSSEC keys
#   file:
#     path: "{{ item }}"
#     mode: '0640'
#     owner: "{{ bind_owner }}"
#     group: "{{ bind_group }}"
#   with_fileglob:
#     - "{{ bind_dnssec_key_dir }}/K*.{key,private}"
#   tags:
#     - bind
#     - bind-dnssec

# - name: DNSSEC keygen | Gather keys from key files
#   shell: >-
#       set -o nounset -o pipefail -o errexit &&
#       grep 'Key:' "{{ bind_dnssec_key_dir }}/K{{ item.name }}".*.private | cut -d ' ' -f 2
#   args:
#     executable: /bin/bash
#   with_items:
#     - "{{ bind_zone_domains }}"
#   register:
#     bind_dnssec_keys
#   tags:
#     - bind
#     - bind-dnssec

# - name: DNSSEC keygen | Show keys (debug)
#   debug:
#     var: bind_dnssec_keys
# - name: "Create DDNS Key files"
#   template:
#     src: "{{ role_path }}/templates/ddns_key.j2"
#     dest: "{{ bind_conf_dir }}/ddns.key"
#     owner: root
#     group: root
#     mode: "0644"
#   become: yes
#   tags:
#     - bind
#     - bind-dnssec

# ==================================================================================================
#
#
#
# ==================================================================================================
- name: "Install Dynamic DNS Keys."
  ansible.builtin.template:
    src: "etc/bind/ddns_key.j2"
    dest: "{{ bind_conf_dir }}/{{ item }}.key"
    owner: root
    group: root
    mode: "0644"
  become: yes
  loop:
    - ansible
  notify: restart bind
  vars:
    __nameserver: "{{ inventory_hostname_short }}"
    __password_store_id: "{{ autonomy_domain }}/hosts/{{ __nameserver }}/bind_dnssec_secret"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"
    bind_dnssec_secret: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  tags:
    - bind
    - bind_debug
    - bind-debug
    - bind-config

# ==================================================================================================
#
# Install Configuration files
#
# ==================================================================================================
- name: "Install Bind Config Files."
  ansible.builtin.template:
    src: "etc/bind/{{ item }}.j2"
    dest: "{{ bind_conf_dir }}/{{ item }}"
    owner: root
    group: root
    mode: "0644"
    validate: "/usr/sbin/named-checkconf %s"
  become: yes
  loop:
    - named.conf
    - named.conf.options
    - named.conf.default-zones
    - named.conf.local
  when:
    - bind_dnssec_secret is defined
    - bind_zones is defined
  notify: restart bind
  tags:
    - bind
    - bind_debug
    - bind-debug
    - bind-config

# ==================================================================================================
#
#
#
# ==================================================================================================
- name: "Ensure Zone Directory Exists."
  ansible.builtin.file:
    dest: "{{ bind_zone_dir }}"
    state: directory
    owner: "{{ bind_owner }}"
    group: "{{ bind_group }}"
    mode: "0755"
  become: yes
  when:
    - bind_dnssec_secret is defined
  tags:
    - bind
    - bind_debug
    - bind-debug
    - bind-zones

# ==================================================================================================
#
# Install Zone Files
#
# ==================================================================================================
- name: "Download Root Zone file."
  ansible.builtin.get_url:
    url: "http://www.internic.net/domain/root.zone"
    dest: "{{ bind_cache_dir }}/db.root"
    owner: bind
    group: bind
    mode: "0644"
  become: yes
  when:
    - bind_dnssec_secret is defined
  tags:
    - bind
    - bind_debug
    - bind-debug
    - bind-zones

# ==================================================================================================
#
# The next two templates have 'force' set to 'no' so that they only install a new zone file if one
# does not already exist.  Any further updates are done via the 'nsupdate' module in either the
# dns_forwardzone or dns_reversezone roles.
#
# ==================================================================================================
- name: "Installing Forward Zone files."
  ansible.builtin.template:
    src: "var/lib/bind/forwardzone.j2"
    dest: "{{ bind_zone_dir }}/db.{{ bind_zone }}"
    owner: "{{ bind_owner }}"
    group: "{{ bind_group }}"
    mode: "0644"
    force: no
    validate: "/usr/sbin/named-checkzone %s"
  become: yes
  register: forwardzone_refresh
  when:
    - bind_zone is defined
  notify: restart bind
  tags:
    - bind
    - bind_debug
    - bind-debug
    - bind-zones

- name: "Installing Reverse Zone files."
  ansible.builtin.template:
    src: "var/lib/bind/reversezone.j2"
    dest: "{{ bind_zone_dir }}/db.{{ bind_reverse_zone }}"
    owner: "{{ bind_owner }}"
    group: "{{ bind_group }}"
    mode: "0644"
    force: no
    validate: "/usr/sbin/named-checkzone %s"
  become: yes
  register: reversezone_refresh
  when:
    - bind_reverse_zone is defined
  notify: restart bind
  tags:
    - bind
    - bind_debug
    - bind-debug
    - bind-zones

# ==================================================================================================
#
# I choose 0775 permissions, why?  Why not 0755?  I am sure I had a reason, can't remember what it
# was.
#
# TODO: Document why I am using 0775
#
# ==================================================================================================
- name: "Ensure Bind can write to bind directories."
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ bind_owner }}"
    group: "{{ bind_group }}"
    mode: "0775"
    state: directory
  become: yes
  loop:
    - "{{ bind_zone_dir }}"
    - "{{ bind_cache_dir }}"
  tags:
    - bind
    - bind_debug
    - bind-debug
    - bind-zones
