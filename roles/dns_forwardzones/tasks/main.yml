---
# tasks file for dns-update
- name: "Pre-tasks"
  block:
    - name: Include OS-specific variables.
      include_vars: "{{ lookup('first_found', params) }}"
      vars:
        params:
          files: "{{ __os_variables_files }}"
          paths:
            - "vars"
      become: no

    - name: "Install packages"
      ansible.builtin.package:
        name: "{{ autonomy_packages }}"
        state: present
      become: yes
      when:
        - ansible_os_family is defined
        - ansible_os_family == "Debian"
        - ansible_network_os is undefined
        - inventory_hostname != 'localhost'
        - inventory_hostname not in groups['virtual_hosts'] | default([])
        - inventory_hostname in groups['internal_zone'] | default([])
        - inventory_hostname in groups['dmz_zone'] | default([])

- name: "Add or modify host A records."
  community.general.nsupdate:
    key_name: "ansible"
    key_secret: "{{ __key_secret }}"
    key_algorithm: "hmac-sha256"
    server: "{{ hostvars[item]['ansible_host'] }}"
    zone: "{{ autonomy_domain }}"
    record: "{{ inventory_hostname_short }}"
    value: "{{ ansible_host }}"
    type: "A"
    state: present
  loop: "{{ groups[autonomy_zone_name + '_dns_servers'] }}"
  become: yes
  remote_user: root
  vars:
    __nameserver: "{{ hostvars[item]['inventory_hostname_short'] }}"
    __password_store_id: "{{ autonomy_domain }}/hosts/{{ __nameserver }}/bind_dnssec_secret"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"
    __key_secret: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  delegate_to: "{{ hostvars[item]['ansible_host'] }}"

- name: "Add or modify host AAAA records."
  community.general.nsupdate:
    key_name: "ansible"
    key_secret: "{{ __key_secret }}"
    key_algorithm: "hmac-sha256"
    server: "{{ hostvars[item]['ansible_host'] }}"
    zone: "{{ autonomy_domain }}"
    record: "{{ inventory_hostname_short }}"
    value: "{{ autonomy_ipv6_address }}"
    type: "AAAA"
    state: present
  loop: "{{ groups[autonomy_zone_name + '_dns_servers'] }}"
  become: yes
  remote_user: root
  when:
    - autonomy_ipv6_address is defined
  delegate_to: "{{ hostvars[item]['ansible_host'] }}"

# ==================================================================================================
#
# Create cname records
#
# ==================================================================================================
- name: "Set subject alt name based on role."
  ansible.builtin.set_fact:
    __cname_records: "{{ __cname_records + __cname }}"
  become: no
  loop:
    - name: "db_servers"
      alt_name: "db"
    - name: "file_servers"
      alt_name: "fs"
    - name: "git_servers"
      alt_name: "git"
    - name: "homeassistant"
      alt_name: "home"
    - name: "auth_servers"
      alt_name: "auth"
    - name: "ldap_servers"
      alt_name: "ldap"
    - name: "mail_servers"
      alt_name: "mail"
    - name: "dovecot_servers"
      alt_name: "imap"
    - name: "postfix_servers"
      alt_name: "smtp"
    - name: "dlna_servers"
      alt_name: "dlna"
    - name: "mosquitto_servers"
      alt_name: "mqtt"
    - name: "radius_servers"
      alt_name: "radius"
    - name: "redis_servers"
      alt_name: "redis"
    - name: "samba_domain_controllers"
      alt_name: "dc"
    - name: "web_servers"
      alt_name: "www"
    - name: "zwavecontrollers"
      alt_name: "zwave"
  vars:
    __group_id: "{{ autonomy_zone_name }}_{{ item.name }}"
    __host_index: "{{ groups[__group_id].index(inventory_hostname) + 1 }}"
    __padded_index: "{{ '%02d' % __host_index | int }}"
    __cname:
      - "{{ item.alt_name }}{{ __padded_index }}"
      - "{{ item.alt_name }}"
  when:
    - inventory_hostname not in groups ['public_zone'] | default([])
    - inventory_hostname in groups[item.name] | default([])
    - item.alt_name != inventory_hostname_short

# ==================================================================================================
#
# TODO: Fix role cname for multiple values.  For example, the desired end result is:
#
# www      CNAME www01
#          CNAME www02
#
# Currently, each host overwrites the setting of the other host.
#
# www CNAME www01
# is replaced by:
# www CNAME www02
#
# Not really sure how to get this to work.
#
# ==================================================================================================
- name: "Add or modify host CNAME records based on server role"
  community.general.nsupdate:
    key_name: "ansible"
    key_secret: "{{ __key_secret }}"
    key_algorithm: "hmac-sha256"
    server: "{{ hostvars[item[0]]['ansible_host'] }}"
    zone: "{{ autonomy_domain }}"
    record: "{{ item[1] }}"
    value: "{{ inventory_hostname }}."
    type: "CNAME"
    state: "present"
  loop: "{{ groups[autonomy_zone_name + '_dns_servers'] | product(__cname_records) | list }}"
  become: yes
  when:
    - bind_zone is defined
  remote_user: root
  delegate_to: "{{ hostvars[item[0]]['ansible_host'] }}"

# - name: "Add or modify host CNAME records based on defined virtual hosts"
#   community.general.nsupdate:
#     key_name: "ansible"
#     key_secret: "{{ item[0].bind_dnssec_secret }}"
#     key_algorithm: "hmac-sha256"
#     server: "{{ item[0].address_ipv4 }}"
#     zone: "{{ bind_zone }}"
#     record: "{{ item[1].name.split('.')[0] }}"
#     value: "{{ inventory_hostname }}."
#     type: "CNAME"
#   loop: "{{ bind_zone_dnsservers | product(virtual_hosts) | list }}"
#   become: yes
#   when:
#     - bind_zone is defined
#     - virtual_hosts is defined
#   remote_user: root
#   delegate_to: "{{ item[0].address_ipv4 }}"

# - name: "Add or modify MX records"
#   community.general.nsupdate:
#     key_name: "ansible"
#     key_secret: "{{ item.bind_dnssec_secret }}"
#     key_algorithm: "hmac-sha256"
#     server: "{{ item.address_ipv4 }}"
#     zone: "{{ zone }}"
#     record: "{{ zone }}."
#     value: "{{ ansible_fqdn }}."
#     type: "MX"
#   loop: "{{ zone_dnsservers }}"
#   become: yes
#   when:
#     - bind_zone is defined
#     - bind_mx_record is defined
#   remote_user: root
#   delegate_to: "{{ item.address_ipv4 }}"
#   tags:
#     - dns_forwardzones
#     - dns-forwardzones
#     - dns_forwardzones_debug
#     - dns-forwardzones-debug
