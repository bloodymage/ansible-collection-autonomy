---
# ==================================================================================================
#
# Needs complete re-write
#
# New role tasks:
# 1. Determine if we are to recreate the realm (tag "recreate-realm")
# 2. If yes, primary_domain_controller = groups['samba_domain_controllers'][0]
#    if not, primary_domain_controller = {{ discovered schema master domain_controller }},
#    ie, whichever domain controller is being used to manage the database
#    "samba-tool fsmo show | grep SchemaMasterRole"
#    Ref: https://wiki.samba.org/index.php/Setting_up_RFC2307_in_AD
# 3. If yes, clear samba database files
# 4. Install Samba
# 5. If yes, create first domain controller
# 6. All other hosts join domain
#
# ==================================================================================================
# TODO: Really check if already joined
# - name: "Check if host is already joined as a domain controller."
#   ansible.builtin.command:
#     cmd: "net ads testjoin -k"
#   register: __joined
#   become: no
#   when:
#     - not __samba_recreate_realm

- name: "Set joined status"
  ansible.builtin.set_fact:
    __samba_joined_as_domain_controller: "{{ joined_as_ad_dc }}"
  become: no
  when:
    - not __samba_recreate_realm

- name: "Ensure we have a password for the Samba Administrator account"
  ansible.builtin.set_fact:
    samba_administrator_password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  become: no
  vars:
    __password_store_id: "{{ rebeldream_domain }}/domain_users/administrator/password"
    __password_length: "length={{ item.password_legnth | default(rebeldream_password_length) }}"
    __password_overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
    __password_create: "create=true"
    __password_symbols: "nosymbols=true"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"
  when:
    - samba_administrator_password == "password"
  no_log: yes

- name: "Include OS-specific variables."
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files: "{{ __os_variables_files }}"
      paths:
        - "vars"
  become: no

- name: "Install packages"
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present
  become: yes

- name: "Ensure we have the correct permissionss on /var/lib/samba/usershares"
  ansible.builtin.file:
    path: "/var/lib/samba/usershares"
    owner: "root"
    group: "sambashare"
    mode: "1755"
  become: yes

- name: "Precheck domain prior to provisioning new domain controllers"
  include: "precheck.yml"
  become: no
  when:
    - not __samba_joined_as_domain_controller

- name: "Provision additional domain controllers"
  include: "provision_additional_controllers.yml"
  become: no
  when:
    - rebeldream_fqdn != __samba_schema_master
    - not __samba_joined_as_domain_controller

- name: "Start Samba Domain Controller"
  service:
    name: samba-ad-dc
    state: started
  become: yes

- name: "Test domain controllers"
  include: "test_controllers.yml"
  become: no
  when:
    - not __samba_joined_as_domain_controller

- name: "Configure smb.conf file"
  ansible.builtin.template:
    src: "smb.conf.j2"
    dest: "/etc/samba/smb.conf"
    owner: root
    group: root
    mode: 0644
  become: yes
  notify: restart samba-ad-dc

- name: "Configure user.map file"
  ansible.builtin.template:
    src: "user_map.j2"
    dest: /etc/samba/user.map
    owner: root
    group: root
    mode: 0644
  become: yes
  notify: restart samba-ad-dc

- name: "Add Domain Controller to Reverse Zone"
  ansible.builtin.command:
    cmd: >
      samba-tool dns add localhost
      "{{ ansible_host.split('.')[1] }}.{{ ansible_host.split('.')[0] }}.in-addr.arpa"
      "{{ ansible_host.split('.')[3] }}.{{ ansible_host.split('.')[2] }}"
      PTR "{{ rebeldream_fqdn }}"
      -U administrator
      --password="{{ samba_administrator_password }}"
  become: yes
  ignore_errors: yes

- name: "Harden domain"
  include: "hardening.yml"
  become: no
  when:
    - rebeldream_fqdn == __samba_schema_master

# ==================================================================================================
#
# Configure automated Sysvol Replication
#
# References:
#   - https://wiki.samba.org/index.php/SysVol_replication_(DFS-R)
#   - https://wiki.samba.org/index.php/Bidirectional_Rsync/Unison_based_SysVol_replication_workaround
#
# ==================================================================================================
- name: "Make SSH Control Directory"
  ansible.builtin.file:
    path: "~/.ssh/ctl"
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: yes

- name: "Create SSH Control Configuration"
  ansible.builtin.template:
    src: "control_ssh.j2"
    dest: "~/.ssh/ctl/config"
    owner: root
    group: root
    mode: "0644"
  become: yes

- name: "Create Log File"
  ansible.builtin.file:
    path: "/var/log/sysvol-sync.log"
    state: touch
    owner: root
    group: root
    mode: "0640"
  become: yes

- name: "Ensure unison configuration directory exists"
  ansible.builtin.file:
    path: "~/.unison"
    state: directory
    owner: root
    group: root
    mode: "0750"
  become: yes

- name: Create Unison Preferences
  ansible.builtin.template:
    src: "unison.j2"
    dest: "~/.unison/default.prf"
    owner: root
    group: root
    mode: "0644"
  become: yes

- name: Create Backup of SysVol directory
  ansible.builtin.archive:
    path: /var/lib/samba/sysvol
    dest: ~/sysvol.tar.xz
    owner: "root"
    group: "root"
    mode: "0644"
  become: yes

# - name: "Test Unison Synchronization"
#   shell: "/usr/bin/unison"
#   become: yes
#   register: success
#   when:
#     - rebeldream_fqdn == __samba_schema_master

- name: Create Cron Sync
  ansible.builtin.cron:
    name: "Syncronize SysVol Directories"
    minute: "*/5"
    hour: "*"
    day: "*"
    weekday: "*"
    month: "*"
    job: "/usr/bin/unison -silent"
    user: "root"
  become: yes
  when:
    - rebeldream_fqdn == __samba_schema_master

- name: "Update Schema"
  include: "schema_updates.yml"
  become: no
  when:
    - rebeldream_fqdn == __samba_schema_master
