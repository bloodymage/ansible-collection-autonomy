---
# This playbook contains common plays that will be run on all nodes.
# ==================================================================================================
#
#
#
# ==================================================================================================
- name: Include OS-specific variables.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files: "{{ __os_variables_files }}"
      paths:
        - "vars"
  become: no
  delegate_to: localhost
  run_once: yes
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all
    - install-packages

- name: "Install packages"
  ansible.builtin.package:
    pkg: "{{ packages }}"
    state: present
  become: yes
  register: result
  delegate_to: localhost
  run_once: yes
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all
    - install-packages

- name: Get IP geolocation data
  community.general.ipinfoio_facts:
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

# ==================================================================================================
#
# Tasks: Create Directories
#
# 
#
# ==================================================================================================
- name: Create PKI Directory
  ansible.builtin.file:
    path: '{{ ownca_ca_directory }}/{{ item }}'
    state: directory
    owner: "{{ ownca_user }}"
    group: "{{ ownca_user }}"
    mode: '0700'
  loop:
    - private
    - certs
    - crl
    - csr
    - newcerts
    - db
  delegate_to: localhost
  run_once: true
  become: no
  tags:
    - ownca
    - ownca-all
    - ownca_debug
    - ownca-debug

# ==================================================================================================
#
# Create Database
#
# ==================================================================================================
# - name: Create an index file
#   file:
#     path: '{{ ownca_ca_directory }}/index.txt'
#     owner: root
#     group: root
#     mode: '0600'
#   delegate_to: localhost
#   run_once: true

- name: Print Variable
  ansible.builtin.debug:
    msg:
      - "{{ ownca_certificate_authorities }}"
      - "{{ rebeldream_org_unit_name }}"
    verbosity: 2
  delegate_to: localhost
  become: no
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Create database
  ansible.builtin.copy:
    src: "/dev/null"
    dest: "{{ ownca_ca_directory }}/db/{{ rebeldream_org_name }}-{{ item.name }}-ca.db"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
    force: no
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  become: no
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Create a serial file
  ansible.builtin.template:
    src: "{{ role_path }}/templates/serial.j2"
    dest: "{{ ownca_ca_directory }}/db/{{ rebeldream_org_name }}-{{ item.name }}-ca.cert.srl"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"
    force: no
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  become: no
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Create crl serial file
  ansible.builtin.template:
    src: "{{ role_path }}/templates/serial.j2"
    dest: "{{ ownca_ca_directory }}/db/{{ rebeldream_org_name }}-{{ item.name }}-ca.crl.srl"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"
    force: no
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  become: no
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

# ==================================================================================================
#
# Generate Passwords if they don't exist
#
# ==================================================================================================
- name: "Ensure we have a password for the Root Certificate Authority"
  ansible.builtin.set_fact:
    ownca_root_password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  vars:
    __password_store_id: "{{ rebeldream_org_name }}_common/ownca/ownca_root_password"
    __password_length: "length={{ item.password_legnth | default(rebeldream_password_length) }}"
    __password_overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
    __password_create: "create=true"
    __password_symbols: "nosymbols=true"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"
  when:
    - ownca_root_password == "password"
  delegate_to: localhost
  run_once: yes
  become: no
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

- name: "Ensure we have a password for the Intermediate and Issuing Certificate Authorities"
  ansible.builtin.set_fact:
    ownca_{{ item }}_password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  vars:
    __password_store_id: "{{ rebeldream_domain }}/ownca/ownca_{{ item }}_password"
    __password_length: "length={{ item.password_legnth | default(rebeldream_password_length) }}"
    __password_overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
    __password_create: "create=true"
    __password_symbols: "nosymbols=true"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"
  loop:
    - intermediate
    - component
    - identity
    - codesign
  become: no
  when:
    - ownca_{{ item }}_password == "password"
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

# ==================================================================================================
#
# Task: Generate CA Private Key
#
# ==================================================================================================
- name: Generate CA Private Key
  community.crypto.openssl_privatekey:
    path: "{{ ownca_ca_private_key_directory }}/{{ rebeldream_org_name }}-{{ item.name }}-ca.key"
    passphrase: "{{ item.password }}"
    type: "{{ ownca_privatekey_type }}"
    cipher: "auto"
    owner: "{{ ownca_user }}"
    group: "{{ ownca_user }}"
    mode: "0400"
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  become: no
  when:
    - inventory_hostname == "localhost"
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Generate Certificate Authority Certificate Signing Requests (CSR)
  community.crypto.openssl_csr:
    path: "{{ ownca_ca_directory }}/csr/{{ rebeldream_org_name }}-{{ item.name }}-ca.csr"
    privatekey_path: "{{ ownca_ca_private_key_directory }}/{{ rebeldream_org_name }}-{{ item.name }}-ca.key"
    privatekey_passphrase: "{{ item.password }}"
    common_name: "{{ item.common_name }}"
    country_name: "{{ rebeldream_country_name | default(country) }}"
    email_address: "{{ item.email_address | default(omit) }}"
    organization_name: "{{ item.organization_name | default(rebeldream_org_name | title ) }}"
    organizational_unit_name: "{{ item.organizational_unit_name | default(rebeldream_org_unit_name) | title }}"
    state_or_province_name: "{{ rebeldream_region_name | default(region) }}"
    key_usage: "{{ item.keyusage }}"
    key_usage_critical: "{{ item.keyusage_critical | default('no') }}"
    basic_constraints: "{{ item.basic_constraints }}"
    basic_constraints_critical: "{{ item.basic_constraints_critical | default('no') }}"
    create_subject_key_identifier: yes
    crl_distribution_points:
      - full_name: "URI:{{ ownca_crl_distribution_point }}/{{ rebeldream_org_name }}-{{ item.name }}.crl"
        reasons:
          - key_compromise
          - ca_compromise
          - affiliation_changed
          - superseded
          - cessation_of_operation
          - certificate_hold
          - privilege_withdrawn
          - aa_compromise
    owner: "{{ ownca_user }}"
    group: "{{ ownca_user }}"
    backup: yes
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  run_once: yes
  become: no
  when:
    - inventory_hostname == "localhost"
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Generate Selfsigned Certificate
  community.crypto.x509_certificate:
    path: "{{ ownca_ca_directory }}/certs/{{ rebeldream_org_name }}-{{ item.name }}-ca.crt"
    privatekey_path: "{{ ownca_ca_private_key_directory }}/{{ rebeldream_org_name }}-{{ item.name }}-ca.key"
    privatekey_passphrase: "{{ item.password }}"
    csr_path: "{{ ownca_ca_directory }}/csr/{{ rebeldream_org_name }}-{{ item.name }}-ca.csr"
    provider: "{{ item.provider }}"
    owner: "{{ ownca_user }}"
    group: "{{ ownca_user }}"
    backup: yes
    force: "{{ __ownca_regenerate }}"
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  run_once: yes
  become: no
  when:
    - inventory_hostname == "localhost"
    - item.provider == "selfsigned"
  register: __new_root
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Check if Selfsigned Certificate was a success
  ansible.builtin.debug:
    msg:
      - "{{ __new_root }}"
    verbosity: 1
  become: no
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: If self signed certificate was regenerated; force regeneration of the remaining certificates
  set_fact:
    __ownca_force_regeneration: yes
  become: no
  when:
    - __new_root.changed or ( __ownca_regenerate is defined and __ownca_regenerate )
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

- name: Generate OwnCA Signed Certificate
  community.crypto.x509_certificate:
    path: "{{ ownca_ca_certs_directory }}/{{ rebeldream_org_name }}-{{ item.name }}-ca.crt"
    csr_path: "{{ ownca_ca_directory }}/csr/{{ rebeldream_org_name }}-{{ item.name }}-ca.csr"
    ownca_path: "{{ ownca_ca_certs_directory }}/{{ rebeldream_org_name }}-{{ item.ownca }}-ca.crt"
    ownca_privatekey_path: "{{ ownca_ca_private_key_directory }}/{{ rebeldream_org_name }}-{{ item.ownca }}-ca.key"
    ownca_privatekey_passphrase: "{{ item.ownca_privatekey_passphrase }}"
    provider: "{{ item.provider }}"
    backup: yes
    owner: "{{ ownca_user }}"
    group: "{{ ownca_user }}"
    force: "{{ __ownca_force_regeneration }}"
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  become: no
  when:
    - item.provider == "ownca"
    - inventory_hostname != "localhost"
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

# ==================================================================================================
#
# Create PEM Bundles
#
# ==================================================================================================
- name: Find root certificate
  community.crypto.certificate_complete_chain:
    input_chain: "{{ lookup('file', __input_chain_path) }}"
    intermediate_certificates:
      - "{{ __intermediate_cert_path }}"
    root_certificates:
      - "{{ ownca_ca_certs_directory }}/{{ rebeldream_org_name }}-root-ca.crt"
  vars:
    __intermediate_cert_file: "{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-ca.crt"
    __intermediate_cert_path: "{{ ownca_ca_certs_directory }}/{{ __intermediate_cert_file }}"
    __input_chain_file: "{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-{{ item }}-ca.crt"
    __input_chain_path: "{{ ownca_ca_certs_directory }}/{{ __input_chain_file }}"
  loop: "{{ ownca_issuing_authorities }}"
  register: parent_cert_authorities
  delegate_to: localhost
  become: no
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-bundles
    - ownca-all

- name: Cert Chain (Name, Complete Chain)
  ansible.builtin.debug:
    msg:
      - "{{ item.item }}"
      - "{{ item.complete_chain }}"
      - "BREAK"
      - ""
    verbosity: 1
  loop: "{{ parent_cert_authorities.results }}"
  delegate_to: localhost
  become: no
  when:
    - item.chain is defined
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Print Cert Authorities Results (Item)
  ansible.builtin.debug:
    msg:
      - "{{ item }}"
    verbosity: 2
  loop: "{{ parent_cert_authorities.results }}"
  when:
    - parent_cert_authorities is defined
    - parent_cert_authorities.results is defined
  delegate_to: localhost
  become: no
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Print Cert Authorities Results
  ansible.builtin.debug:
    msg:
      - "{{ parent_cert_authorities.results }}"
    verbosity: 3
  when:
    - parent_cert_authorities is defined
    - parent_cert_authorities.results is defined
  delegate_to: localhost
  become: no
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Print Cert Authorities (Full)
  ansible.builtin.debug:
    msg:
      - "{{ parent_cert_authorities }}"
    verbosity: 4
  when:
    - parent_cert_authorities is defined
  delegate_to: localhost
  become: no
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Find root certificate
  community.crypto.certificate_complete_chain:
    input_chain: "{{ lookup('file', __input_chain_path) }}"
    root_certificates:
      - "{{ ownca_ca_certs_directory }}/{{ rebeldream_org_name }}-root-ca.crt"
  vars:
    __input_chain_file: "{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-ca.crt"
    __input_chain_path: "{{ ownca_ca_certs_directory }}/{{ __input_chain_file }}"
  register: root_cert_authorities
  delegate_to: localhost
  become: no
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-bundles
    - ownca-all

- name: Cert Chain (Name, Ownca, Chain, Complete Chain)
  ansible.builtin.debug:
    msg:
      - "{{ root_cert_authorities.chain }}"
      - "{{ root_cert_authorities.complete_chain }}"
      - "{{ root_cert_authorities.root }}"
    verbosity: 1
  delegate_to: localhost
  become: no
  when:
    - parent_cert_authorities.chain is defined
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Print Cert Authorities (Full)
  ansible.builtin.debug:
    msg:
      - "{{ root_cert_authorities }}"
    verbosity: 4
  delegate_to: localhost
  become: no
  when:
    - parent_cert_authorities is defined
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Write complete chain to disk
  ansible.builtin.copy:
    dest: "{{ ownca_ca_certs_directory }}/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-{{ item.item }}-ca-chain.crt"
    content: "{{ ''.join(item.complete_chain) }}"
    owner: "{{ ownca_user }}"
    group: "{{ ownca_user }}"
    mode: "0644"
  loop: "{{ parent_cert_authorities.results }}"
  delegate_to: localhost
  become: no
  when:
    - item.complete_chain is defined
    - inventory_hostname != "localhost"
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-bundles
    - ownca-all

- name: Write root chain (intermediates and root) to disk
  ansible.builtin.copy:
    dest: "{{ ownca_ca_certs_directory }}/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-ca-chain.crt"
    content: "{{ ''.join(root_cert_authorities.complete_chain) }}"
    owner: "{{ ownca_user }}"
    group: "{{ ownca_user }}"
    mode: "0644"
  delegate_to: localhost
  become: no
  when:
    - root_cert_authorities.complete_chain is defined
    - inventory_hostname != "localhost"
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-bundles
    - ownca-all
