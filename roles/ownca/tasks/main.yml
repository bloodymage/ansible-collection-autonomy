---
# This playbook contains common plays that will be run on all nodes.
# ==================================================================================================
#
#
#
# ==================================================================================================
- name: Include OS-specific variables.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_network_os | default(none) }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_distribution.split(' ')[0] | lower }}.yml"
        - "{{ ansible_os_family | lower }}_family.yml"
        - "{{ ansible_system | lower }}.yml"
        - main.yml
      paths:
        - "vars"
  become: no
  delegate_to: localhost
  run_once: yes
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all
    - install-packages

- name: "Install packages"
  package:
    pkg: "{{ packages }}"
    state: present
  become: yes
  register: result
  delegate_to: localhost
  run_once: yes
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all
    - install-packages

- name: Get IP geolocation data
  community.general.ipinfoio_facts:
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

# ==================================================================================================
#
# Tasks: Create Directories
#
# 
#
# ==================================================================================================
- name: Create PKI Directory
  file:
    path: '{{ ownca_ca_directory }}/{{ item }}'
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0700'
  loop:
    - private
    - certs
    - crl
    - csr
    - newcerts
    - db
  delegate_to: localhost
  run_once: true
  tags:
    - ownca
    - ownca-all
    - ownca_debug
    - ownca-debug

# ==================================================================================================
#
# Create Database
#
# ==================================================================================================
# - name: Create an index file
#   file:
#     path: '{{ ownca_ca_directory }}/index.txt'
#     owner: root
#     group: root
#     mode: '0600'
#   delegate_to: localhost
#   run_once: true

- name: Print Variable
  debug:
    msg:
      - "{{ ownca_certificate_authorities }}"
      - "{{ rebeldream_org_unit_name }}"
    verbosity: 2
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Create database
  copy:
    src: "/dev/null"
    dest: "{{ ownca_ca_directory }}/db/{{ rebeldream_org_name }}-{{ item.name }}-ca.db"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
    force: no
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  become: no
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Create a serial file
  template:
    src: "{{ role_path }}/templates/serial.j2"
    dest: "{{ ownca_ca_directory }}/db/{{ rebeldream_org_name }}-{{ item.name }}-ca.cert.srl"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"
    force: no
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Create crl serial file
  template:
    src: "{{ role_path }}/templates/serial.j2"
    dest: "{{ ownca_ca_directory }}/db/{{ rebeldream_org_name }}-{{ item.name }}-ca.crl.srl"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"
    force: no
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

# ==================================================================================================
#
# Generate Passwords if they don't exist
#
# ==================================================================================================
- name: "Ensure we have a password for the Root CA"
  ansible.builtin.set_fact:
    ownca_root_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true ' + overwrite) }}"
  vars:
    password_store_id: "{{ rebeldream_org_name }}_common/ownca/ownca_root_password"
    overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  when:
    - ownca_root_password == "password"
  delegate_to: localhost
  run_once: yes
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

- name: "Ensure we have a password for the Intermediate CA"
  ansible.builtin.set_fact:
    ownca_intermediate_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true ' + overwrite) }}"
  vars:
    password_store_id: "{{ ansible_domain }}/ownca/ownca_intermediate_password"
    overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  when:
    - ownca_intermediate_password == "password"
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

- name: "Ensure we have a password for the Component Issuing CA"
  ansible.builtin.set_fact:
    ownca_component_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true ' + overwrite) }}"
  vars:
    password_store_id: "{{ ansible_domain }}/ownca/ownca_component_password"
    overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  when:
    - ownca_component_password == "password"
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

- name: "Ensure we have a password for the Identity Issuing CA"
  ansible.builtin.set_fact:
    ownca_identity_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true ' + overwrite) }}"
  vars:
    password_store_id: "{{ ansible_domain }}/ownca/ownca_identity_password"
    overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  when:
    - ownca_identity_password == "password"
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

- name: "Ensure we have a password for the Code Sign Issuing CA"
  ansible.builtin.set_fact:
    ownca_codesign_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true ' + overwrite) }}"
  vars:
    password_store_id: "{{ ansible_domain }}/ownca/ownca_codesign_password"
    overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  when:
    - ownca_codesign_password == "password"
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

# ==================================================================================================
#
# Task: Generate CA Private Key
#
# ==================================================================================================
- name: Generate CA Private Key
  openssl_privatekey:
    path: "{{ ownca_ca_directory }}/private/{{ rebeldream_org_name }}-{{ item.name }}-ca.key"
    passphrase: "{{ item.password }}"
    type: "{{ ownca_privatekey_type }}"
    cipher: "auto"
    owner: "{{ ownca_user }}"
    group: "{{ ownca_user }}"
    mode: "0400"
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  become: no
  when:
    - inventory_hostname == "localhost"
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Generate Certificate Authority Certificate Signing Request (CSR)
  openssl_csr:
    path: "{{ ownca_ca_directory }}/csr/{{ rebeldream_org_name }}-{{ item.name }}-ca.csr"
    privatekey_path: "{{ ownca_ca_directory }}/private/{{ rebeldream_org_name }}-{{ item.name }}-ca.key"
    privatekey_passphrase: "{{ item.password }}"
    common_name: "{{ item.common_name }}"
    country_name: "{{ rebeldream_country_name | default(country) }}"
    email_address: "{{ item.email_address | default(omit) }}"
    organization_name: "{{ item.organization_name | default(rebeldream_org_name | title ) }}"
    organizational_unit_name: "{{ item.organizational_unit_name | default(rebeldream_org_unit_name) | title }}"
    state_or_province_name: "{{ rebeldream_region_name | default(region) }}"
    key_usage: "{{ item.keyusage }}"
    key_usage_critical: "{{ item.keyusage_critical | default('no')}}"
    basic_constraints: "{{ item.basic_constraints }}"
    basic_constraints_critical: "{{ item.basic_constraints_critical | default('no') }}"
    create_subject_key_identifier: yes
    owner: "{{ ownca_user }}"
    group: "{{ ownca_user }}"
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  run_once: yes
  become: no
  when:
    - inventory_hostname == "localhost"
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Generate Selfsigned Certificate
  openssl_certificate:
    path: "{{ ownca_ca_directory }}/certs/{{ rebeldream_org_name }}-{{ item.name }}-ca.crt"
    privatekey_path: "{{ ownca_ca_directory }}/private/{{ rebeldream_org_name }}-{{ item.name }}-ca.key"
    privatekey_passphrase: "{{ item.password }}"
    csr_path: "{{ ownca_ca_directory }}/csr/{{ rebeldream_org_name }}-{{ item.name }}-ca.csr"
    provider: "{{ item.provider }}"
    owner: "{{ ownca_user }}"
    group: "{{ ownca_user }}"
    backup: yes
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  run_once: yes
  become: no
  when:
    - inventory_hostname == "localhost"
    - item.provider == "selfsigned"
  register: success
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

- name: Check if Selfsigned Certificate was a success
  debug:
    msg:
      - "{{ success }}"
    verbosity: 1
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: If self signed certificate was regenerated; force regeneration of the remaining certificates
  set_fact:
    __ownca_force_regeneration: yes
  when:
    - success.changed
  tags:
    - ownca
    - ownca_debug
    - ownca-debug


- name: Generate OwnCA Signed Certificate
  openssl_certificate:
    path: "{{ ownca_ca_directory }}/certs/{{ rebeldream_org_name }}-{{ item.name }}-ca.crt"
    csr_path: "{{ ownca_ca_directory }}/csr/{{ rebeldream_org_name }}-{{ item.name }}-ca.csr"
    ownca_path: "{{ ownca_ca_directory }}/certs/{{ rebeldream_org_name }}-{{ item.ownca }}-ca.crt"
    ownca_privatekey_path: "{{ ownca_ca_directory }}/private/{{ rebeldream_org_name }}-{{ item.ownca }}-ca.key"
    ownca_privatekey_passphrase: "{{ item.ownca_privatekey_passphrase }}"
    provider: "{{ item.provider }}"
    backup: yes
    owner: "{{ ownca_user }}"
    group: "{{ ownca_user }}"
    force: "{{ __ownca_force_regeneration }}"
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  become: no
  when:
    - item.provider == "ownca"
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-all

# ==================================================================================================
#
# Create PEM Bundles
#
# ==================================================================================================
- name: Find root certificate
  community.crypto.certificate_complete_chain:
    input_chain: "{{ lookup('file', ownca_ca_directory + '/certs/' + rebeldream_org_name + '-' + rebeldream_org_unit_name + '-' + item + '-ca.crt') }}"
    intermediate_certificates:
      - "{{ ownca_ca_directory }}/certs/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-ca.crt"
    root_certificates:
      - "{{ ownca_ca_directory }}/certs/{{ rebeldream_org_name }}-root-ca.crt"
  loop: "{{ ownca_issuing_authorities }}"
  register: parent_cert_authorities
  delegate_to: localhost
  become: no
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-bundles
    - ownca-all

- name: Cert Chain (Name, Complete Chain)
  debug:
    msg:
      - "{{ item.item }}"
      - "{{ item.complete_chain }}"
      - "BREAK"
      - ""
    verbosity: 1
  loop: "{{ parent_cert_authorities.results }}"
  delegate_to: localhost
  become: no
  when:
    - item.chain is defined
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Print Cert Authorities Results (Item)
  debug:
    msg:
      - "{{ item }}"
    verbosity: 2
  loop: "{{ parent_cert_authorities.results }}"
  when:
    - parent_cert_authorities is defined
    - parent_cert_authorities.results is defined
  delegate_to: localhost
  become: no
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Print Cert Authorities Results
  debug:
    msg:
      - "{{ parent_cert_authorities.results }}"
    verbosity: 3
  when:
    - parent_cert_authorities is defined
    - parent_cert_authorities.results is defined
  delegate_to: localhost
  become: no
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Print Cert Authorities (Full)
  debug:
    msg:
      - "{{ parent_cert_authorities }}"
    verbosity: 4
  when:
    - parent_cert_authorities is defined
  delegate_to: localhost
  become: no
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Find root certificate
  community.crypto.certificate_complete_chain:
    input_chain: "{{ lookup('file', ownca_ca_directory + '/certs/' + rebeldream_org_name + '-' + rebeldream_org_unit_name + '-ca.crt') }}"
    root_certificates:
      - "{{ ownca_ca_directory }}/certs/{{ rebeldream_org_name }}-root-ca.crt"
  register: root_cert_authorities
  delegate_to: localhost
  become: no
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-bundles
    - ownca-all

- name: Cert Chain (Name, Ownca, Chain, Complete Chain)
  debug:
    msg:
      - "{{ root_cert_authorities.chain }}"
      - "{{ root_cert_authorities.complete_chain }}"
      - "{{ root_cert_authorities.root }}"
    verbosity: 1
  delegate_to: localhost
  become: no
  when:
    - parent_cert_authorities.chain is defined
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Print Cert Authorities (Full)
  debug:
    msg:
      - "{{ root_cert_authorities }}"
    verbosity: 4
  delegate_to: localhost
  become: no
  when:
    - parent_cert_authorities is defined
  tags:
    - never
    - ownca_debug
    - ownca-debug

- name: Write complete chain to disk
  copy:
    dest: "{{ ownca_ca_directory }}/certs/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-{{ item.item }}-ca-chain.crt"
    content: "{{ ''.join(item.complete_chain) }}"
  loop: "{{ parent_cert_authorities.results }}"
  delegate_to: localhost
  become: no
  when:
    - item.complete_chain is defined
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-bundles
    - ownca-all

- name: Write root chain (intermediates and root) to disk
  copy:
    dest: "{{ ownca_ca_directory }}/certs/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-ca-chain.crt"
    content: "{{ ''.join(root_cert_authorities.complete_chain) }}"
  delegate_to: localhost
  become: no
  when:
    - root_cert_authorities.complete_chain is defined
  tags:
    - ownca
    - ownca_debug
    - ownca-debug
    - ownca-bundles
    - ownca-all
