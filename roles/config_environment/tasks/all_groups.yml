---
- name: "Create groups based on the OS Family"
  ansible.builtin.group_by:
    key: "{{ ansible_os_family | lower }}"
  when:
    - ansible_os_family is defined
  changed_when: False

- name: "Create groups based on the System"
  ansible.builtin.group_by:
    key: "{{ ansible_system | lower }}"
  when:
    - ansible_system is defined
  changed_when: False

# ==================================================================================================
#
# Create groups based on zone information.
#
# =================================================================================================
- name: "Create group by zone type."
  ansible.builtin.group_by:
    key: "{{ autonomy_zone_type }}_zone"
  changed_when: False

- name: "Create group by zone name."
  ansible.builtin.group_by:
    key: "{{ autonomy_zone_name }}_zone"
  when:
    - autonomy_zone_name is defined
  changed_when: False

# ==================================================================================================
#
# In some places we need the same group as above, without the "_zone" on the end.
#
# ==================================================================================================
- name: "Create group by zone name."
  ansible.builtin.group_by:
    key: "{{ autonomy_zone_name }}"
  when:
    - autonomy_zone_name is defined
  changed_when: False

# ==================================================================================================
#
# Now we create groups based on the host's role
#
# ==================================================================================================
- name: "Create parent groups based on host's role."
  ansible.builtin.group_by:
    key: "{{ item.parent }}"
  loop: "{{ autonomy_parent_groups }}"
  when:
    - item.parent is defined
    - inventory_hostname in groups[item.name] | default([])
  changed_when: False

# ==================================================================================================
#
# We run this a second time because groups that were created by the previous task won't create
# parent groups based on the newly added groups.
#
# For example:
# postfix_servers will create smtp_servers group in the previous task.  We need smtp_servers to be
# part of the 'mail_servers' group.  The previous task won't add smtp_servers to the mail_servers
# group, so we run it a second time.
#
# ==================================================================================================
- name: "Create parent groups based on host's role."
  ansible.builtin.group_by:
    key: "{{ item.parent }}"
  loop: "{{ autonomy_parent_groups }}"
  when:
    - item.parent is defined
    - inventory_hostname not in groups[item.parent] | default([])
    - inventory_hostname in groups[item.name] | default([])
  changed_when: False

- name: "Create host groups based on zone name and role."
  ansible.builtin.group_by:
    key: "{{ autonomy_zone_name }}_{{ item.name }}"
  loop: "{{ autonomy_parent_groups }}"
  when:
    - inventory_hostname in groups[item.name] | default([])
  changed_when: False

- name: "Create host groups based on zone type and role."
  ansible.builtin.group_by:
    key: "{{ autonomy_zone_type }}_{{ item.name }}"
  loop: "{{ autonomy_parent_groups }}"
  when:
    - inventory_hostname in groups[item.name] | default([])
  changed_when: False

- name: "Create virtual_hosts group."
  ansible.builtin.group_by:
    key: "virtual_hosts"
  when:
    - autonomy_virtual_host
  changed_when: False
