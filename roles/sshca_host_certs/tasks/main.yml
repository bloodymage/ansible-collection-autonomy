---
# ==================================================================================================
#
# Tasks:
#  
#
# ==================================================================================================
- name: "Pre-tasks"
  block:
    - name: Include OS-specific variables.
      include_vars: "{{ lookup('first_found', params) }}"
      vars:
        params:
          files: "{{ __os_variables_files }}"
          paths:
            - "vars"
      become: no
      tags:
        - sshca_host_certs
        - sshca-host-certs
        - sshca_host_certs_debug
        - sshca-host-certs-debug
        - install-packages

    - name: "Install packages"
      ansible.builtin.package:
        name: "{{ packages }}"
        state: present
      become: yes
      tags:
        - sshca_host_certs
        - sshca-host-certs
        - sshca_host_certs_debug
        - sshca-host-certs-debug
        - install-packages

# ==================================================================================================
#
# Tasks:
#  
#
# ==================================================================================================
- name: "Ensure we have a password for the Host CA Key"
  ansible.builtin.set_fact:
    sshca_host_key_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true') }}"
  vars:
    password_store_id: "{{ rebeldream_org_name }}_common/sshca/sshca_host_key_password"
  become: no
  when:
    - sshca_host_key_password == "password"
  tags:
    - sshca_host_certs
    - sshca-host-certs
    - sshca_host_certs_debug
    - sshca-host-certs-debug

- name: Find SSH host keys.
  ansible.builtin.find:
    path: "{{ ssh_config_dir }}"
    pattern: ssh_host_*_key
  register: private_keys
  failed_when: "\"matched\" not in private_keys or private_keys.matched == 0"
  become: yes
  tags:
    - sshca_host_certs
    - sshca-host-certs
    - sshca_host_certs_debug
    - sshca-host-certs-debug

- name: Create local temporary directory.
  tempfile:
    suffix: ansible-ssh-host-signer
    state: directory
  changed_when: false
  register: temporary_directory
  delegate_to: localhost
  run_once: true
  tags:
    - sshca_host_certs
    - sshca-host-certs
    - sshca_host_certs_debug
    - sshca-host-certs-debug

- name: Fetch public keys.
  ansible.builtin.fetch:
    src: "{{ item.path }}.pub"
    dest: "{{ temporary_directory.path }}/public_keys/"
  with_items: "{{ private_keys.files }}"
  changed_when: false
  tags:
    - sshca_host_certs
    - sshca-host-certs
    - sshca_host_certs_debug
    - sshca-host-certs-debug

- name: Fetch existing certificates.
  ansible.builtin.fetch:
    src: "{{ item.path }}-cert.pub"
    dest: "{{ temporary_directory.path }}/existing_certificates/"
    fail_on_missing: false
  with_items: "{{ private_keys.files }}"
  changed_when: false
  tags:
    - sshca_host_certs
    - sshca-host-certs
    - sshca_host_certs_debug
    - sshca-host-certs-debug

# ==================================================================================================
#
# Sign SSH Keys
#
# TODO: Add serial number
# TODO: Add expiration
# TODO: Use expect module for password from ansible vault
#       https://docs.ansible.com/ansible/latest/modules/expect_module.html
#
# ==================================================================================================
- name: Sign SSH keys.
  expect:
    command: ssh-keygen -s "{{ sshca_host_signer_key }}"
             -I "{{ sshca_host_signer_id }}"
             -h -n "{{ sshca_host_signer_hostnames }}"
             "{{ temporary_directory.path }}/public_keys/{{ inventory_hostname | quote }}{{ item.path | quote }}.pub"
    responses:
      (?i)passphrase: "{{ sshca_host_key_password }}"
  become: no
  no_log: yes
  loop: "{{ private_keys.files }}"
  changed_when: false
  delegate_to: localhost
  tags:
    - sshca_host_certs
    - sshca-host-certs
    - sshca_host_certs_debug
    - sshca-host-certs-debug

# ==================================================================================================
#
# Tasks:
#  
#
# ==================================================================================================
- name: Find certificates.
  ansible.builtin.find:
    path: "{{ temporary_directory.path }}/public_keys/{{ inventory_hostname | quote }}{{ ssh_config_dir }}/"
    pattern: ssh_host_*_key-cert.pub
  register: certificates
  delegate_to: localhost
  tags:
    - sshca_host_certs
    - sshca-host-certs
    - sshca_host_certs_debug
    - sshca-host-certs-debug

# ======================================================================
#
# Tasks:
# 
#
# ======================================================================
- name: Compare certificates.
  command:
    cmd: >
      diff <(ssh-keygen -L -f "{{ item.path | quote }}" |
      tail -n +2) <(ssh-keygen -L -f "{{ __existing_cert_path }}" |
      tail -n +2)
  vars:
    __existing_cert_dir: "{{ temporary_directory.path | quote }}/existing_certificates"
    __existing_host_dir: "{{ __existing_cert_dir }}/{{ rebeldream_fqdn | quote }}"
    __existing_ssh_config_dir: "{{ __existing_host_dir }}/{{ ssh_config_dir }}"
    __existing_cert: "{{ item.path | basename | quote }}"
    __existing_cert_path: "{{ __existing_ssh_config_dir }}/{{ __existing_cert }}"
  with_items: "{{ certificates.files }}"
  changed_when: false
  failed_when: false
  register: certificate_comparison
  delegate_to: localhost
  tags:
    - sshca_host_certs
    - sshca-host-certs
    - sshca_host_certs_debug
    - sshca-host-certs-debug

# ==================================================================================================
#
# Tasks:
#  
#
# ==================================================================================================
- name: Copy certificates back to server.
  ansible.builtin.copy:
    src: "{{ item.item.path }}"
    dest: "{{ ssh_config_dir }}/{{ item }}"
    owner: "root"
    group: "root"
    mode: "0644"
  with_items: "{{ certificate_comparison.results }}"
  notify: restart ssh
  become: yes
  when:
    - item.rc != 0
  tags:
    - sshca_host_certs
    - sshca-host-certs
    - sshca_host_certs_debug
    - sshca-host-certs-debug

# ==================================================================================================
#
# Tasks:
#  
#
# ==================================================================================================
- name: Remove local temporary directory.
  ansible.builtin.file:
    name: "{{ temporary_directory.path }}"
    state: absent
  become: yes
  changed_when: false
  delegate_to: localhost
  run_once: true
  tags:
    - sshca_host_certs
    - sshca-host-certs
    - sshca_host_certs_debug
    - sshca-host-certs-debug
