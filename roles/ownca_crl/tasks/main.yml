---
# tasks file for ownca-crl
# ==================================================================================================
#
# Create SSL Private Key and CRS Directories
#
# Creates the following Directories:
#   - /etc/ssl/private mode: 0700
#   - /etc/ssl/csr     mode: 0700
#   - /etc/ssl/certs   mode: 0755
#
# ==================================================================================================
- name: Include OS-specific variables.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_network_os | default(none) }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_distribution.split(' ')[0] | lower }}.yml"
        - "{{ ansible_os_family | lower }}_family.yml"
        - "{{ ansible_system | lower }}.yml"
        - main.yml
      paths:
        - "vars"
  become: no
  tags:
    - ownca_crl
    - ownca-crl
    - ownca_crl_debug
    - ownca-crl-debug
    - ownca-all
    - install-packages

- name: "Install packages"
  package:
    pkg: "{{ packages }}"
    state: present
  become: yes
  register: result
  delegate_to: localhost
  tags:
    - ownca_crl
    - ownca-crl
    - ownca_crl_debug
    - ownca-crl-debug
    - ownca-all
    - install-packages

- name: Get IP geolocation data
  community.general.ipinfoio_facts:
  tags:
    - ownca_crl
    - ownca-crl
    - ownca_crl_debug
    - ownca-crl-debug

- name: "Create SSL CRL Directory"
  file:
    path: "/etc/ssl/crls"
    state: directory
    owner: root
    group: root
    mode: "0755"
  become: yes
  tags:
    - ownca_crl
    - ownca-crl
    - ownca_crl_debug
    - ownca-crl-debug

# ==================================================================================================
#
# Generate Passwords if they don't exist
#
# ==================================================================================================
- name: "Ensure we have a password for the Root CA"
  ansible.builtin.set_fact:
    ownca_root_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true ' + overwrite) }}"
  vars:
    password_store_id: "{{ rebeldream_org_name }}_common/ownca/ownca_root_password"
    overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  when:
    - ownca_root_password == "password"
  delegate_to: localhost
  run_once: yes
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

- name: "Ensure we have a password for the Intermediate CA"
  ansible.builtin.set_fact:
    ownca_intermediate_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true ' + overwrite) }}"
  vars:
    password_store_id: "{{ ansible_domain }}/ownca/ownca_intermediate_password"
    overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  when:
    - ownca_intermediate_password == "password"
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

- name: "Ensure we have a password for the Component Issuing CA"
  ansible.builtin.set_fact:
    ownca_component_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true ' + overwrite) }}"
  vars:
    password_store_id: "{{ ansible_domain }}/ownca/ownca_component_password"
    overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  when:
    - ownca_component_password == "password"
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

- name: "Ensure we have a password for the Identity Issuing CA"
  ansible.builtin.set_fact:
    ownca_identity_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true ' + overwrite) }}"
  vars:
    password_store_id: "{{ ansible_domain }}/ownca/ownca_identity_password"
    overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  when:
    - ownca_identity_password == "password"
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

- name: "Ensure we have a password for the Code Sign Issuing CA"
  ansible.builtin.set_fact:
    ownca_codesign_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true ' + overwrite) }}"
  vars:
    password_store_id: "{{ ansible_domain }}/ownca/ownca_codesign_password"
    overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  when:
    - ownca_codesign_password == "password"
  delegate_to: localhost
  tags:
    - ownca
    - ownca_debug
    - ownca-debug

# ==================================================================================================
#
# Create CRLs
#
# ==================================================================================================
- name: Generate a CRL
  community.crypto.x509_crl:
    path: "{{ ownca_directory }}/certificate_authorities/crl/{{ rebeldream_org_name }}-{{ item.name }}.crl"
    privatekey_path: "{{ ownca_directory }}/certificate_authorities/private/{{ rebeldream_org_name }}-{{ item.name }}-ca.key"
    privatekey_passphrase: "{{ item.password }}"
    issuer:
      CN: "{{ item.common_name }}"
    last_update: "+0s"
    next_update: "+7d"
    revoked_certificates: "{{ item.revoked_certificates | default(ownca_revoked_certificates) }}"
  loop: "{{ ownca_certificate_authorities }}"
  delegate_to: localhost
  tags:
    - ownca_crl
    - ownca-crl
    - ownca_crl_debug
    - ownca-crl-debug
