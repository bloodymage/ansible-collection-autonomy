---
# This playbook contains common plays that will be run on all nodes.
#
# References:
# - https://tools.ietf.org/html/draft-moskowitz-eddsa-pki-00
# - https://pki-tutorial.readthedocs.io/en/latest/expert/index.html
#
# CAs:
# - Root:
#   - Network:
#     - Identity:
#     - Encryption:
#     - Component:
#     - Code Signing:
#   - Network:
#     - Identity:
#     - Encryption:
#     - Component:
#     - Code Signing:
#   ...
#
# ======================================================================
- name: Include OS-specific variables.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_network_os | default(none) }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_distribution.split(' ')[0] | lower }}.yml"
        - "{{ ansible_os_family | lower }}_family.yml"
        - "{{ ansible_system | lower }}.yml"
        - main.yml
      paths:
        - "vars"
  become: no
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug
    - ownca-all
    - install-packages

- name: "Install packages"
  package:
    pkg: "{{ packages }}"
    state: present
  become: yes
  register: result
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug
    - ownca-all
    - install-packages

- name: Get IP geolocation data
  community.general.ipinfoio_facts:
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: "Ensure we have a password for the Identity Issuing CA"
  ansible.builtin.set_fact:
    ownca_identity_password: "{{ lookup('community.general.passwordstore', password_store_id + ' create=true length=42 nosymbols=true ' + overwrite) }}"
  vars:
    password_store_id: "{{ ansible_domain }}/ownca/ownca_identity_password"
    overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  when:
    - ownca_identity_password == "password"
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

# ==================================================================================================
#
# Create SSL Private Key and CRS Directories
#
# Creates the following Directories:
#   - /etc/ssl/private
#   - /etc/ssl/csr
#
# ==================================================================================================
- name: "Create SSL Private Key Directories"
  file:
    path: '/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/private'
    state: directory
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: '0700'
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.username is defined
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: "Create SSL CSR Key Directories"
  file:
    path: '/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/csr'
    state: directory
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: '0700'
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.username is defined
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: "Create SSL Cert Directories"
  file:
    path: '/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/certs'
    state: directory
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: '0755'
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.username is defined
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: "Create SSL PKCS#12 Key Directories"
  file:
    path: '/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/pkcs12'
    state: directory
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: '0700'
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
    - item.username is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

# ==================================================================================================
#
# Create User Private Key
#
# ==================================================================================================
- name: Generate User Private Key
  openssl_privatekey:
    path: '/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/private/{{ item.username }}.key'
    type: '{{ ownca_privatekey_type }}'
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    cipher: auto
    size: 2048
    mode: '0600'
    force: no
    passphrase: "{{ item.password }}"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
    - item.username is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

# ==================================================================================================
#
# Create Network CA Certificate
#
# Notes: Doesn't work with the msUPN OID.
#
# ==================================================================================================
- name: Generate User Authentication CSR
  community.crypto.openssl_csr:
    path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/csr/{{ item.username }}_authentication.csr"
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0644"
    country_name: "{{ rebeldream_country }}"
    state_or_province_name: "{{ rebeldream_region }}"
    locality_name: "{{ rebeldream_city }}"
    organization_name: "{{ rebeldream_org_name }}"
    organizational_unit_name: "{{ rebeldream_org_unit_name }}"
    common_name: "{{ item.given_name }} {{ item.surname }}"
    email_address: "{{ item.username}}@{{ ansible_domain }}"
    key_usage: "{{ ownca_user_certs_authentication_key_usage }}"
    key_usage_critical: yes
    extended_key_usage: "{{ ownca_user_certs_authentication_extended_key_usage }}"
    privatekey_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki//private/{{ item.username }}.key"
    privatekey_passphrase: "{{ item.password }}"
    subject_alt_name: "otherName:{{ msupn }};UTF8:{{ item.username }}@{{ ansible_domain }}"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
    - item.surname is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Generate User Authentication CSR
  community.crypto.openssl_csr:
    path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/csr/{{ item.username }}_authentication.csr"
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0644"
    country_name: "{{ rebeldream_country }}"
    state_or_province_name: "{{ rebeldream_region }}"
    locality_name: "{{ rebeldream_city }}"
    organization_name: "{{ rebeldream_org_name }}"
    organizational_unit_name: "{{ rebeldream_org_unit_name }}"
    common_name: "{{ item.given_name }}"
    email_address: "{{ item.username}}@{{ ansible_domain }}"
    key_usage: "{{ ownca_user_certs_authentication_key_usage }}"
    key_usage_critical: yes
    extended_key_usage: "{{ ownca_user_certs_authentication_extended_key_usage }}"
    privatekey_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/private/{{ item.username }}.key"
    privatekey_passphrase: "{{ item.password }}"
    subject_alt_name: "otherName:{{ msupn }};UTF8:{{ item.username }}@{{ ansible_domain }}"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
    - item.surname is not defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Generate User Identeficitation CSR
  community.crypto.openssl_csr:
    path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/csr/{{ item.username }}_identification.csr"
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0644"
    country_name: "{{ rebeldream_country }}"
    state_or_province_name: "{{ rebeldream_region }}"
    locality_name: "{{ rebeldream_city }}"
    organization_name: "{{ rebeldream_org_name }}"
    organizational_unit_name: "{{ rebeldream_org_unit_name }}"
    common_name: "{{ item.given_name }} {{ item.surname }}"
    email_address: "{{ item.username }}@{{ samba_email_domain }}"
    key_usage: "{{ ownca_user_certs_identification_key_usage }}"
    key_usage_critical: yes
    extended_key_usage: "{{ ownca_user_certs_identification_extended_key_usage }}"
    privatekey_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/private/{{ item.username }}.key"
    privatekey_passphrase: "{{ item.password }}"
    subject_alt_name: "email:{{ item.username }}@{{ samba_email_domain }}"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
    - item.surname is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Generate User Identeficitation CSR
  community.crypto.openssl_csr:
    path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/csr/{{ item.username }}_identification.csr"
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0644"
    country_name: "{{ rebeldream_country }}"
    state_or_province_name: "{{ rebeldream_region }}"
    locality_name: "{{ rebeldream_city }}"
    organization_name: "{{ rebeldream_org_name }}"
    organizational_unit_name: "{{ rebeldream_org_unit_name }}"
    common_name: "{{ item.given_name }}"
    email_address: "{{ item.username }}@{{ samba_email_domain }}"
    key_usage: "{{ ownca_user_certs_identification_key_usage }}"
    key_usage_critical: yes
    extended_key_usage: "{{ ownca_user_certs_identification_extended_key_usage }}"
    privatekey_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/private/{{ item.username }}.key"
    privatekey_passphrase: "{{ item.password }}"
    subject_alt_name: "email:{{ item.username }}@{{ samba_email_domain }}"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
    - item.surname is not defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Generate User Encryption CSR
  community.crypto.openssl_csr:
    path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/csr/{{ item.username }}_encryption.csr"
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0644"
    country_name: "{{ rebeldream_country }}"
    state_or_province_name: "{{ rebeldream_region }}"
    locality_name: "{{ rebeldream_city }}"
    organization_name: "{{ rebeldream_org_name }}"
    organizational_unit_name: "{{ rebeldream_org_unit_name }}"
    common_name: "{{ item.given_name }} {{ item.surname }}"
    email_address: "{{ item.username }}@{{ samba_email_domain }}"
    key_usage: "{{ ownca_user_certs_encryption_key_usage }}"
    key_usage_critical: yes
    extended_key_usage: "{{ ownca_user_certs_encryption_extended_key_usage }}"
    privatekey_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/private/{{ item.username }}.key"
    privatekey_passphrase: "{{ item.password }}"
    subject_alt_name: "email:{{ item.username }}@{{ samba_email_domain }}"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
    - item.surname is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Generate User Encryption CSR
  community.crypto.openssl_csr:
    path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/csr/{{ item.username }}_encryption.csr"
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0644"
    country_name: "{{ rebeldream_country }}"
    state_or_province_name: "{{ rebeldream_region }}"
    locality_name: "{{ rebeldream_city }}"
    organization_name: "{{ rebeldream_org_name }}"
    organizational_unit_name: "{{ rebeldream_org_unit_name }}"
    common_name: "{{ item.given_name }}"
    email_address: "{{ item.username }}@{{ samba_email_domain }}"
    key_usage: "{{ ownca_user_certs_encryption_key_usage }}"
    key_usage_critical: yes
    extended_key_usage: "{{ ownca_user_certs_encryption_extended_key_usage }}"
    privatekey_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/private/{{ item.username }}.key"
    privatekey_passphrase: "{{ item.password }}"
    subject_alt_name: "email:{{ item.username }}@{{ samba_email_domain }}"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
    - item.surname is not defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

# ==================================================================================================
#
# Create User Certificates
#
# ==================================================================================================
- name: Fetch Authentication CSRs.
  fetch:
    src: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/csr/{{ item.username }}_authentication.csr"
    dest: "{{ ownca_directory }}/users/csr/"
    flat: yes
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Fetch Identification CSRs.
  fetch:
    src: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/csr/{{ item.username }}_identification.csr"
    dest: "{{ ownca_directory }}/users/csr/"
    flat: yes
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Fetch Encryption CSRs.
  fetch:
    src: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/csr/{{ item.username }}_encryption.csr"
    dest: "{{ ownca_directory }}/users/csr/"
    flat: yes
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Generate User Authentication Certificates
  community.crypto.x509_certificate:
    path: "{{ ownca_directory }}/users/certs/{{ item.username }}_authentication.crt"
    csr_path: "{{ ownca_directory }}/users/csr/{{ item.username }}_authentication.csr"
    ownca_path: "{{ ownca_directory }}/certificate_authorities/certs/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-identity-ca.crt"
    ownca_privatekey_path: "{{ ownca_directory }}/certificate_authorities/private/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-identity-ca.key"
    ownca_privatekey_passphrase: "{{ ownca_identity_password }}"
    provider: ownca
  become: no
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  delegate_to: localhost
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Generate User Identfication Certificates
  community.crypto.x509_certificate:
    path: "{{ ownca_directory }}/users/certs/{{ item.username }}_identification.crt"
    csr_path: "{{ ownca_directory }}/users/csr/{{ item.username }}_identification.csr"
    ownca_path: "{{ ownca_directory }}/certificate_authorities/certs/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-identity-ca.crt"
    ownca_privatekey_path: "{{ ownca_directory }}/certificate_authorities/private/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-identity-ca.key"
    ownca_privatekey_passphrase: "{{ ownca_identity_password }}"
    provider: ownca
  become: no
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  delegate_to: localhost
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Generate User Encryption Certificates
  community.crypto.x509_certificate:
    path: "{{ ownca_directory }}/users/certs/{{ item.username }}_encryption.crt"
    csr_path: "{{ ownca_directory }}/users/csr/{{ item.username }}_encryption.csr"
    ownca_path: "{{ ownca_directory }}/certificate_authorities/certs/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-identity-ca.crt"
    ownca_privatekey_path: "{{ ownca_directory }}/certificate_authorities/private/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-identity-ca.key"
    ownca_privatekey_passphrase: "{{ ownca_identity_password }}"
    provider: ownca
  become: no
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  delegate_to: localhost
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Copy User Authentication Certificates to workstation.
  copy:
    src: "{{ ownca_directory }}/users/certs/{{ item.username }}_authentication.crt"
    dest: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/certs/{{ item.username }}_authentication.crt"
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0644"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Copy User Identification Certificates to workstation.
  copy:
    src: "{{ ownca_directory }}/users/certs/{{ item.username }}_identification.crt"
    dest: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/certs/{{ item.username }}_identification.crt"
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0644"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Copy User Encryption Certificates to workstation.
  copy:
    src: "{{ ownca_directory }}/users/certs/{{ item.username }}_encryption.crt"
    dest: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/certs/{{ item.username }}_encryption.crt"
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0644"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Generate PKCS#12 Authentication file
  community.crypto.openssl_pkcs12:
    action: export
    friendly_name: "{{ item.given_name }} {{ item.surname }} (Authentication)"
    path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/pkcs12/{{ item.username }}_authentication.p12"
    privatekey_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/private/{{ item.username }}.key"
    privatekey_passphrase: "{{ item.password }}"
    certificate_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/certs/{{ item.username }}_authentication.crt"
    other_certificates: "/etc/ssl/certs/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-identity-ca.pem"
    state: present
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0600"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Generate PKCS#12 Identification file
  community.crypto.openssl_pkcs12:
    action: export
    friendly_name: "{{ item.given_name }} {{ item.surname }} (Authentication)"
    path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/pkcs12/{{ item.username }}_identification.p12"
    privatekey_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/private/{{ item.username }}.key"
    privatekey_passphrase: "{{ item.password }}"
    certificate_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/certs/{{ item.username }}_identification.crt"
    other_certificates: "/etc/ssl/certs/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-identity-ca.pem"
    state: present
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0600"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug

- name: Generate PKCS#12 Encryption file
  community.crypto.openssl_pkcs12:
    action: export
    friendly_name: "{{ item.given_name }} {{ item.surname }} (Authentication)"
    path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/pkcs12/{{ item.username }}_encryption.p12"
    privatekey_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/private/{{ item.username }}.key"
    privatekey_passphrase: "{{ item.password }}"
    certificate_path: "/home/{{ rebeldream_org_unit_name | upper}}/{{ item.username }}/.pki/certs/{{ item.username }}_encryption.crt"
    other_certificates: "/etc/ssl/certs/{{ rebeldream_org_name }}-{{ rebeldream_org_unit_name }}-identity-ca.pem"
    state: present
    owner: "{{ item.id_number }}"
    group: "{{ item.id_number }}"
    mode: "0600"
  become: yes
  loop: "{{ domain_users }}"
  when:
    - item.given_name is defined
  tags:
    - ownca_user_certs
    - ownca-user-certs
    - ownca_user_certs_debug
    - ownca-user-certs-debug
