---
# tasks file for nextcloud
# ==================================================================================================
#
# TODO: Update this to fully qualified collection name
#
# As of ansible 2.10.3 this fails with the fully qualified collection name:
# - ansible.builtin.include_vars
#
# ==================================================================================================
- name: Include OS-specific variables.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files: "{{ __os_variables_files }}"
      paths:
        - "vars"
  become: no
  tags:
    - install-packages

- name: "Install packages"
  ansible.builtin.package:
    name: "{{ autonomy_packages }}"
    state: present
  become: yes
  tags:
    - install-packages

# ==================================================================================================
#
#
#
# ==================================================================================================
- name: Install Apache site.conf
  ansible.builtin.template:
    src: "apache-site.conf.j2"
    dest: "/etc/apache2/sites-available/{{ inventory_hostname }}.conf"
    owner: root
    group: root
    mode: "0644"
  become: yes
  notify: reload apache

- name: Check If this is a new install
  ansible.builtin.stat:
    path: "/srv/www/{{ inventory_hostname }}/config/config.php"
  register: install_status
  become: no

- name: "Ensure we have a password for the nextcloud admin user"
  ansible.builtin.set_fact:
    nextcloud_admin_password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  vars:
    __password_store_id: "{{ autonomy_domain }}/hosts/{{ inventory_hostname_short }}/nextcloud_admin_password"
    __password_length: "length={{ nextcloud_password_legnth }}"
    __password_overwrite: "overwrite={{ autonomy_overwrite_password }} backup=yes"
    __password_create: "create=true"
    __password_symbols: "nosymbols=true"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"
  delegate_to: localhost
  when:
    - nextcloud_admin_password == "password"

- name: "Complete fresh install."
  include: nextcloud_install.yml
  when:
    - not install_status.stat.exists

- name: "Ensure we have a password for the nextcloud ldap lookup user."
  ansible.builtin.set_fact:
    nextcloud_ldap_password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  vars:
    __password_store_id: "{{ nextcloud_domain }}/domain_users/nextcloud/password"
    __password_length: "length={{ nextcloud_password_length }}"
    __password_overwrite: "overwrite={{ autonomy_overwrite_password }} backup=yes"
    __password_create: "create=true"
    __password_symbols: "nosymbols=true"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"
  delegate_to: localhost
  when:
    - virtual_hosts is defined
    - nextcloud_ldap_password == "password"

- name: "Update nextcloud config."
  ansible.builtin.template:
    src: "config.php.j2"
    dest: "/srv/www/{{ inventory_hostname }}/config/config.php"
    owner: www-data
    group: www-data
    mode: "0644"
  become: yes
  
- name: "Install Nextcloud apps."
  include: nextcloud_apps.yml

- name: "Ensure we have a clean nextcloud state before we do anything else."
  ansible.builtin.command:
    cmd: >
      php occ upgrade
    chdir: "/srv/www/{{ inventory_hostname }}"
  become: yes
  become_user: www-data

# ==================================================================================================
#
# Need to limit this to only when 'user_ldap' app is included in 'nextcloud_apps' list
#
# Disabled for now.
#
# ==================================================================================================
# - name: "Configure LDAP"
#   include: nextcloud_ldap.yml
#   loop: "{{ virtual_hosts }}"
#   loop_control:
#     loop_var: host
#   when:
#     - virtual_hosts is defined
#     - host.content is defined
#     - host.content == "nextcloud"
#   tags:
#     - nextcloud
#     - nextcloud_debug
#     - nextcloud-debug
#     - websites
