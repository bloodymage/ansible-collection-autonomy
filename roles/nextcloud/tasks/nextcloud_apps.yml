# ==================================================================================================
#
# TODO: Update this to fully qualified collection name
#
# As of ansible 2.10.3 this fails with the fully qualified collection name:
# - ansible.builtin.command
#
# ==================================================================================================
- name: Determine Existing App
  command:
    cmd: 'ls /srv/www/{{ host.name }}/apps'
  changed_when: false
  become: no
  register: existing_apps
  tags:
    - nextcloud
    - nextcloud_debug
    - nextcloud-debug
    - websites

# ==================================================================================================
#
# TODO: Update this to fully qualified collection name
#
# As of ansible 2.10.3 this fails with the fully qualified collection name:
# - ansible.builtin.command
#
# ==================================================================================================
- name: Install Nextcloud Apps
  command:
    cmd: "php occ app:install {{ item }}"
    chdir: "/srv/www/{{ host.name }}"
    creates: "/srv/www/{{ host.name }}/apps/{{ item }}/appinfo/info.xml"
  loop: "{{ nextcloud_apps }}"
  become: yes
  become_user: www-data
  when:
    - host.content == "nextcloud"
  tags:
    - nextcloud
    - nextcloud_debug
    - nextcloud-debug
    - websites

# ==================================================================================================
#
# TODO: Update this to fully qualified collection name
#
# As of ansible 2.10.3 this fails with the fully qualified collection name:
# - ansible.builtin.command
#
# ==================================================================================================
- name: Enable Nextcloud Apps
  command:
    cmd: "php occ app:enable {{ item }}"
    chdir: "/srv/www/{{ host.name }}"
  loop: "{{ nextcloud_apps }}"
  become: yes
  become_user: www-data
  when:
    - host.content == "nextcloud"
  tags:
    - nextcloud
    - nextcloud_debug
    - nextcloud-debug
    - websites

- name: Determine disabled apps
  ansible.builtin.set_fact:
    disabled_apps: "{{ existing_apps.stdout_lines | difference(nextcloud_apps) }}"
  become: no
  when:
    - host.content == "nextcloud"
  tags:
    - nextcloud
    - nextcloud_debug
    - nextcloud-debug
    - websites

- name: Determine removed apps
  ansible.builtin.set_fact:
    removed_apps: "{{ disabled_apps | difference(nextcloud_default_apps) }}"
  become: no
  when:
    - host.content == "nextcloud"
  tags:
    - nextcloud
    - nextcloud_debug
    - nextcloud-debug
    - websites

- name: Print Disabled Apps
  ansible.builtin.debug:
    msg: "{{ disabled_apps }}"
    verbosity: 1
  become: no
  when:
    - host.content == "nextcloud"
  tags:
    - never
    - nextcloud_debug
    - nextcloud-debug
    - websites

- name: Print Remove Apps
  ansible.builtin.debug:
    msg: "{{ removed_apps }}"
    verbosity: 1
  become: no
  when:
    - host.content == "nextcloud"
  tags:
    - never
    - nextcloud_debug
    - nextcloud-debug
    - websites

# ==================================================================================================
#
# TODO: Update this to fully qualified collection name
#
# As of ansible 2.10.3 this fails with the fully qualified collection name:
# - ansible.builtin.command
#
# ==================================================================================================
- name: Disable Nextcloud Apps
  command:
    cmd: "php occ app:disable {{ item }}"
    chdir: "/srv/www/{{ host.name }}"
  loop: "{{ disabled_apps }}"
  become: yes
  become_user: www-data
  when:
    - host.content == "nextcloud"
  tags:
    - nextcloud
    - nextcloud_debug
    - nextcloud-debug
    - websites

- name: Remove Nextcloud Apps
  ansible.builtin.file:
    path: "/srv/www/{{ host.name }}/apps/{{ item }}"
    state: absent
  loop: "{{ removed_apps }}"
  become: yes
  when:
    - host.content == "nextcloud"
  tags:
    - nextcloud
    - nextcloud_debug
    - nextcloud-debug
    - websites
