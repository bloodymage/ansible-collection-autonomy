---
- name: Include OS-specific variables.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_network_os | default(none) }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_distribution.split(' ')[0] | lower }}.yml"
        - "{{ ansible_os_family | lower }}_family.yml"
        - "{{ ansible_system | lower }}.yml"
        - default.yml
      paths:
        - "vars"
  become: no
  tags:
    - users
    - users_debug
    - users-debug
    - install-packages

- name: "Get Users' password from password-store"
  ansible.builtin.set_fact:
    username: "{{ item.username }}"
    id_number: "{{ item.id_number }}"
    password: "{{ lookup('community.general.passwordstore', __password_store_id + ' create=true length=' + __password_length + ' nosymbols=true ' + __overwrite) }}"
  vars:
    __password_store_id: "{{ ansible_domain }}/hosts/{{ inventory_hostname_short }}/{{ item.username }}/password"
    __password_length: "{{ item.password_legnth | default(rebeldream_password_length) }}"
    __overwrite: "overwrite={{ rebeldream_overwrite_password }} backup=yes"
  loop: "{{ users }}"
  no_log: yes
  become: no
  delegate_to: localhost
  register: user_password_list
  when:
    - users is defined
    - item.id_number is defined
    - (item.id_number == 1000) or (item.id_number == 1001)
  tags:
    - users
    - users_debug
    - users-debug

- name: "Check Ansible Facts Password (WARNING: This will log the password)"
  ansible.builtin.debug:
    msg:
      - "{{ item.ansible_facts.username }}"
      - "{{ item.ansible_facts.id_number }}"
      - "{{ item.ansible_facts.password }}"
    verbosity: 1
  loop: "{{ user_password_list.results }}"
  become: no
  when:
    - item.ansible_facts.password is defined
  tags:
    - never
    - users_debug
    - users-debug

- name: "Check Ansible Facts (WARNING: This will log the password)"
  ansible.builtin.debug:
    msg:
      - "{{ item.ansible_facts }}"
    verbosity: 2
  loop: "{{ user_password_list.results }}"
  become: no
  when:
    - item.ansible_facts is defined
  tags:
    - never
    - users_debug
    - users-debug

- name: "Check user_password_list.results 'item'  was set (WARNING: This will log the password)"
  ansible.builtin.debug:
    msg:
      - "{{ item }}"
    verbosity: 3
  loop: "{{ user_password_list.results }}"
  become: no
  when:
    - user_password_list.results is defined
  tags:
    - never
    - users_debug
    - users-debug

- name: "Check user_password_list.results (WARNING: This will log the password)"
  ansible.builtin.debug:
    msg:
      - "{{ user_password_list.results }}"
    verbosity: 4
  become: no
  when:
    - user_password_list.results is defined
  tags:
    - never
    - users_debug
    - users-debug

- name: "Check user_password_list (WARNING: This will log the password)"
  ansible.builtin.debug:
    msg:
      - "{{ user_password_list }}"
    verbosity: 4
  become: no
  when:
    - user_password_list is defined
  tags:
    - never
    - users_debug
    - users-debug

- name: Include Family Tasks
  include: "{{ ansible_os_family | lower }}.yml"
  when:
    - ansible_network_os is not defined

- name: Include NetworkOS tasks
  include: "{{ ansible_network_os.split('.')[2] | lower }}.yml"
  when:
    - ansible_network_os is defined
