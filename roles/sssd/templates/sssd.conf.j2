# {{ ansible_managed }}

[sssd]
{% if not sssd_systemd %}
  services = {{ sssd_services }}
{% endif %}
config_file_version = 2
domains = {{ autonomy_domain }}
debug_level = {{ sssd_debug_level }}
{% if autonomy_smart_card_login and inventory_hostname in groups['workstations'] %}
{% if sssd_certificate_verification is defined -%}
  certificate_verification = {{ sssd_certificate_verification }}
{% endif %}
{% endif %}

[pam]
{% if sssd_offline_credentials_expiration is defined -%}
  offline_credentials_expiration = {{ sssd_offline_credentials_expiration }}
{% endif %}
{% if sssd_offline_failed_login_attempts is defined -%}
  offline_failed_login_attempts = {{ sssd_offline_failed_login_attempts }}
{% endif %}
{% if sssd_offline_credentials_expiration == 0 -%}
  pam_pwd_expiration_warning = 0
{% else -%}
  pam_pwd_expiration_warning = {{ sssd_pam_pwd_expiration_warning }}
{% endif %}
{% if autonomy_smart_card_login  and inventory_hostname in groups['workstations'] -%}
{% if sssd_ldap_user_certificate is defined -%}
  pam_cert_auth = {{ sssd_pam_cert_auth }}
pam_cert_db_path = {{ ownca_identity_ca_chain_file_path }}
{#p11_uri = pkcs11:opensc-pkcs11.so:slotid=0:certid=01;id=01 #}
{% endif %}
{% endif %}
{% if sssd_pam_verbosity is defined -%}
  pam_verbosity = {{ sssd_pam_verbosity }}
{% endif %}

[domain/{{ autonomy_domain }}]
ad_domain = {{ autonomy_domain }}
ad_server = dc.{{ autonomy_domain }}
krb5_realm = {{ autonomy_domain | upper }}
id_provider = ad
access_provider = ad
realmd_tags = manages-system joined-with-adcli
krb5_store_password_if_offline = True
cache_credentials = True
use_fully_qualified_names = False
ldap_id_mapping = False
enumerate = true
{% if sssd_ad_gpo_access_control is defined -%}
  ad_gpo_access_control = {{ sssd_ad_gpo_access_control }}
{% endif %}
{% if autonomy_smart_card_login  and inventory_hostname in groups['workstations']  -%}
{% if sssd_ldap_user_certificate is defined -%}
  ldap_tls_reqcert = demand
ldap_tls_cacert = {{ ownca_component_ca_chain_file_path }}
ldap_user_certificate = {{ sssd_ldap_user_certificate }}
{% endif %}
{% endif %}

{# Smart card's don't work without this #}
{% if autonomy_smart_card_login  and inventory_hostname in groups['workstations'] -%}
  [certmap/{{ autonomy_domain }}/ms]
  matchrule = <SAN:ntPrincipalName>.*@.*
  maprule = (|(userPrincipal={subject_nt_principal})(samAccountName={subject_nt_principal.short_name}))
{% endif %}
