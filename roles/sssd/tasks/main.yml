---
# tasks file for sssd
# ==================================================================================================
#
# Task: Install apps
#
# ==================================================================================================
- name: Include OS-specific variables.
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_network_os | default(none) }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_distribution.split(' ')[0] | lower }}.yml"
        - "{{ ansible_os_family | lower }}_family.yml"
        - "{{ ansible_system | lower }}.yml"
        - main.yml
      paths:
        - "vars"
  become: no
  tags:
    - sssd
    - sssd_debug
    - sssd-debug
    - install-packages

- name: "Install packages"
  package:
    name: "{{ packages }}"
    state: present
  become: yes
  tags:
    - sssd
    - sssd_debug
    - sssd-debug
    - install-packages
  notify: restart sssd

# ==================================================================================================
#
# Smart Card Configuration
#
# ==================================================================================================
# - name: Create /etc/pki/nssdb directory
#   file:
#     path: "/etc/pki/nssdb"
#     state: directory
#     owner: root
#     group: root
#     mode: "0755"
#   become: yes

# - name: Create nssdb
#   command: "certutil -N -d nssdb --empty-password"
#   args:
#     chdir: "/etc/pki"
#   become: yes

# - name: Install CA Certificates
#   command: "certutil -d /etc/pki/nssdb -A -n {{ item.common_name }} -t CT,CT,CT -a -i /etc/ssl/certs/{{ rebeldream_org_name | lower }}-{{ item.name }}-ca.pem"
#   become: yes
#   loop: "{{ certificate_authorities }}"
#   when:
#     - item.name == "root"

# - name: Install CA Certificates
#   command: "certutil -d /etc/pki/nssdb -A -n {{ item.common_name }} -t CT,CT,CT -a -i /etc/ssl/certs/{{ rebeldream_org_name | lower }}-{{ item.name }}-ca-chain.pem"
#   become: yes
#   loop: "{{ certificate_authorities }}"
#   when:
#     - item.name != "root"

# - name: Allow nss to read smartcards
#   command: "modutil -dbdir /etc/pki/nssdb -add "OpenSC" -libfile opensc-pkcs11.so"

- name: stop sssd
  service:
    name: sssd
    state: stopped
  become: yes
  tags:
    - never
    - samba-domain-create

- name: Leave Realm
  command: "realm leave"
  tags:
    - never
    - samba-domain-create

- name: Clear old data
  file:
    path: /var/lib/sss/db
    state: absent
  tags:
    - never
    - samba-domain-create

- name: Ensure DB directory exists
  file:
    path: /var/lib/sss/db
    state: direcotory
    owner: sssd
    group: sssd
    mode: "0755"
  tags:
    - never
    - samba-domain-create

- name: Join Realm
  command: "realm join {{ rebeldream_domain }}"
  become: yes
  tags:
    - never
    - samba-domain-create

- name: "Install sssd.conf"
  template:
    src: "{{ role_path }}/templates/sssd.conf.j2"
    dest: "/etc/sssd/sssd.conf"
    owner: root
    group: root
    mode: "0600"
  become: yes
  notify: restart sssd
  tags:
    - sssd
    - sssd_debug
    - sssd-debug
