---
- name: "Check if we are regenerating all ownca certs."
  ansible.builtin.set_fact:
    __ownca_regenerate: yes
  become: no
  changed_when: __ownca_regenerate
  tags:
    - never
    - regenerate-ownca

# ==================================================================================================
#
# Generate Passwords if they don't exist
#
# ==================================================================================================
- name: "Ensure we have a password for the Root Certificate Authority."
  ansible.builtin.set_fact:
    msg: "Success"
  vars:
    __password_store_id: "{{ autonomy_root_domain }}/ownca/ownca_root_password"
    __password_length: "length={{ item.password_legnth | default(autonomy_password_length) }}"
    __password_overwrite: "overwrite={{ autonomy_overwrite_password }} backup=yes"
    __password_create: "create=true"
    __password_symbols: "nosymbols=true"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"
    __password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  when:
    - ownca_root_password == "password"
  delegate_to: localhost
  run_once: yes
  become: no
  tags:
    - ownca
    - regenerate-ownca

- name: "Ensure we have a password for the Intermediate Certificate Authority."
  ansible.builtin.debug:
    msg: "Success"
  vars:
    __password_store_id: "{{ item.name }}.{{ autonomy_root_domain }}/ownca/ownca_intermediate_password"
    __password_length: "length={{ autonomy_password_length }}"
    __password_overwrite: "overwrite={{ autonomy_overwrite_password }} backup=yes"
    __password_create: "create=true"
    __password_symbols: "nosymbols=true"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"
    __ownca_intermediate_password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  loop: "{{ autonomy_zones }}"
  when:
    - ownca_intermediate_password == "password"
  delegate_to: localhost
  run_once: yes
  become: no
  tags:
    - ownca
    - regenerate-ownca

# ==================================================================================================
#
# TODO: This generates a warning because of {{ }} inside a when clause.
#
# Technically, {{ }} should not exist within a when.  Since only part of the the name that is a
# variable, I am not really sure how to fix this.
#
# ==================================================================================================
- name: "Ensure we have a password for the Issuing Certificate Authorities."
  ansible.builtin.debug:
    msg: "Sucess"
  vars:
    __password_store_id: "{{ item.[0]name }}.{{ autonomy_org_name }}/ownca/ownca_{{ item[1] }}_password"
    __password_length: "length={{ autonomy_password_length }}"
    __password_overwrite: "overwrite={{ autonomy_overwrite_password }} backup=yes"
    __password_create: "create=true"
    __password_symbols: "nosymbols=true"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"
    __password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  loop: "{{ autonomy_zones | product(ownca_issuing_authorities) }}"
  when:
    - ownca_{{ item[1] }}_password == "password"
  delegate_to: localhost
  run_once: yes
  become: no
  tags:
    - ownca
    - regenerate-ownca

