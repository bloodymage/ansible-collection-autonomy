# {{ ansible_managed }}

{# This is a basic configuration for signing and verifying. It can easily be
# adapted to suit a basic installation. See opendkim.conf(5) and
# /usr/share/doc/opendkim/examples/opendkim.conf.sample for complete
# documentation of available configuration parameters.
#}
Syslog			yes
SyslogSuccess		yes
{% if opendkim_config_logwhy != __opendkim_config_logwhy -%}
  LogWhy			{{ opendkim_config_logwhy }}
{% endif %}

{# Common signing and verification parameters. In Debian, the "From" header is
# oversigned, because it is often the identity key used by reputation systems
# and thus somewhat security sensitive.
#}
Canonicalization	{{ opendkim_config_canonicalization }}
#Mode			sv
#SubDomains		no
OversignHeaders		From

# Signing domain, selector, and key (required). For example, perform signing
# for domain "example.com" with selector "2020" (2020._domainkey.example.com),
# using the private key stored in /etc/dkimkeys/example.private. More granular
# setup options can be found in /usr/share/doc/opendkim/README.opendkim.
#Domain			example.com
#Selector		2020
#KeyFile		/etc/dkimkeys/example.private

# In Debian, opendkim runs as user "opendkim". A umask of 007 is required when
# using a local socket with MTAs that access the socket as a non-privileged
# user (for example, Postfix). You may need to add user "postfix" to group
# "opendkim" in that case.
UserID			{{ mail_postfix_user }}:{{ mail_postfix_user }}
UMask			007

# Socket for the MTA connection (required). If the MTA is inside a chroot jail,
# it must be ensured that the socket is accessible. In Debian, Postfix runs in
# a chroot in /var/spool/postfix, therefore a Unix socket would have to be
# configured as shown on the last line below.
Socket			local:{{ mail_opendkim_socket }}
#Socket			inet:8891@localhost
#Socket			inet:8891

PidFile			{{ opendkim_pid_path }}

# Hosts for which to sign rather than verify, default is 127.0.0.1. See the
# OPERATION section of opendkim(8) for more information.
InternalHosts		{{ opendkim_config_internal_hosts }}

# The trust anchor enables DNSSEC. In Debian, the trust anchor file is provided
# by the package dns-root-data.
TrustAnchorFile		/usr/share/dns/root.key
#Nameservers		127.0.0.1

{% if opendkim_config_external_ignore_list != __opendkim_config_external_ignore_list -%}
  ExternalIgnoreList  {{ opendkim_config_external_ignore_list }}
{% endif %}
{% if opendkim_config_signing_keytable != __opendkim_config_signing_keytable -%}
  SigningTable {{ opendkim_config_signing_keytable }}
{% endif %}
{% if opendkim_config_keytable != __opendkim_config_keytable -%}
  KeyTable {{ opendkim_config_keytable }}
{% endif %}
