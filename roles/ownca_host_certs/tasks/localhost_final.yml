---
- name: "Ensure we have a PKCS12 password for the Host"
  ansible.builtin.set_fact:
    __ownca_host_cert_pkcs12_password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  become: no
  delegate_to: localhost
  when:
    - ownca_host_certs_pkcs12_password == "password"
  vars:
    __password_store_id: "{{ autonomy_passdb }}{{ autonomy_domain }}/hosts/{{ autonomy_hostname }}/ownca_host_cert_pkcs12_password"
    __password_length: "length={{ item.password_legnth | default(autonomy_password_length) }}"
    __password_overwrite: "overwrite={{ autonomy_overwrite_password }} backup=yes"
    __password_create: "create=true"
    __password_symbols: "nosymbols=true"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"

# ==================================================================================================
#
# Generate PKCS#12 file.
#
# TODO: Set force update to a variable.
#
# ==================================================================================================
- name: "Generate PKCS#12 file."
  community.crypto.openssl_pkcs12:
    action: export
    backup: yes
    path:  "{{ ownca_hosts_directory }}/pkcs12/{{ autonomy_fqdn }}.pkcs12"
    friendly_name: "{{ autonomy_fqdn }}"
    passphrase: "{{ __ownca_host_cert_pkcs12_password }}"
    privatekey_path: "{{ ownca_hosts_directory }}/private/{{ autonomy_fqdn }}.key"
    certificate_path: "{{ ownca_hosts_directory }}/certs/{{ autonomy_fqdn }}-chain.crt"
    other_certificates:
      - "{{ ownca_ca_directory }}/certs/{{ autonomy_org_name }}-{{ autonomy_org_unit_name }}-component-ca.crt"
      - "{{ ownca_ca_directory }}/certs/{{ autonomy_org_name }}-{{ autonomy_org_unit_name }}-ca.crt"
      - "{{ ownca_ca_directory }}/certs/{{ autonomy_org_name }}-root-ca.crt"
    state: present
    iter_size: 0
    maciter_size: 0
    mode: '0600'
    owner: "{{ __autonomy_user }}"
    group: "{{ __autonomy_user }}"
    #force: yes
  become: no
  delegate_to: localhost

- name: Copy PKCS12 files Samba File Server.
  ansible.builtin.copy:
    src: "{{ ownca_hosts_directory }}/pkcs12/{{ autonomy_fqdn }}.pkcs12"
    dest: "/srv/samba/pki/pkcs12/{{ autonomy_fqdn }}.pkcs12"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ ownca_certificate_authorities }}"
  become: yes
  when:
    - inventory_hostname == groups['samba_file_servers'][0] | default([])
