---
- name: "Ensure we have a PKCS12 password for the Host."
  ansible.builtin.set_fact:
    ownca_host_cert_pkcs12_password: "{{ lookup('community.general.passwordstore', __password_lookup) }}"
  vars:
    __password_store_id: "{{ autonomy_passdb }}{{ autonomy_domain }}/hosts/{{ autonomy_hostname }}/ownca_host_cert_pkcs12_password"
    __password_length: "length={{ autonomy_password_length }}"
    __password_overwrite: "overwrite={{ autonomy_overwrite_password }} backup=yes"
    __password_create: "create=true"
    __password_symbols: "nosymbols=true"
    __password_lookup: "{{ __password_store_id }} {{ __password_create }} {{ __password_length }} {{ __password_symbols }} {{ __password_overwrite }}"
  #delegate_to: localhost
  when:
    - ownca_host_certs_pkcs12_password == "password"
  tags:
    - ownca_host_certs
    - ownca-host-certs
    - ownca_host_certs_debug
    - ownca-host-certs-debug

- name: "Generate PKCS#12 file."
  community.crypto.openssl_pkcs12:
    action: export
    backup: yes
    path:  "{{ ownca_hosts_directory }}/pkcs12/{{ autonomy_fqdn }}.pkcs12"
    friendly_name: "{{ autonomy_fqdn }}"
    passphrase: "{{ ownca_host_cert_pkcs12_password }}"
    privatekey_path: "{{ ownca_hosts_directory }}/private/{{ autonomy_fqdn }}.key"
    certificate_path: "{{ ownca_hosts_directory }}/certs/{{ autonomy_fqdn }}-chain.crt"
    other_certificates:
      - "{{ ownca_ca_directory }}/certs/{{ autonomy_org_name }}-{{ autonomy_org_unit_name }}-component-ca.crt"
      - "{{ ownca_ca_directory }}/certs/{{ autonomy_org_name }}-{{ autonomy_org_unit_name }}-ca.crt"
      - "{{ ownca_ca_directory }}/certs/{{ autonomy_org_name }}-root-ca.crt"
    state: present
    iter_size: 0
    maciter_size: 0
    mode: '0600'
    owner: "{{ __autonomy_user }}"
    group: "{{ __autonomy_user }}"
    #force: yes
  become: no
  delegate_to: localhost
  tags:
    - ownca_host_certs
    - ownca-host-certs
    - ownca_host_certs_debug
    - ownca-host-certs-debug
    - ownca-bundles
    - ownca-all

# ==================================================================================================
#
# https://wiki.mikrotik.com/wiki/Manual:Create_Certificates
#
# ==================================================================================================

# ==================================================================================================
#
# Tasks: Copy Host PKCS12 file to Server.
#
# ansible.builtin.copy doesn't work for routeros.  So using ansible.builtin.command and using 'scp'.
# This is ugly! There has got to be a better way.
#
# ==================================================================================================
- name: "Copy host's PKCS12 file to host."
  ansible.builtin.copy:
    src: "{{ ownca_hosts_directory }}/pkcs12/{{ autonomy_fqdn }}.pkcs12"
    dest: "{{ autonomy_fqdn }}.pkcs12"
  become: no
  tags:
    - ownca_host_certs
    - ownca-host-certs
    - ownca_host_certs_debug
    - ownca-host-certs-debug
    - ownca-bundles
    - ownca-all

# - name: "Copy host's PKCS12 file to host."
#   ansible.builtin.command:
#     cmd: >
#       scp {{ ownca_hosts_directory }}/pkcs12/{{ autonomy_fqdn }}.pkcs12
#       {{ ansible_user }}@{{ inventory_hostname }}:{{ autonomy_fqdn }}.pkcs12
#   become: no
#   delegate_to: localhost
#   tags:
#     - ownca_host_certs
#     - ownca-host-certs
#     - ownca_host_certs_debug
#     - ownca-host-certs-debug
#     - ownca-all

# - name: Copy CRLs to server.
#   ansible.builtin.copy:
#     src: "{{ ownca_directory }}/certificate_authorities/crl/{{ autonomy_org_name }}-{{ item.name }}.crl"
#     dest: "{{ ownca_etc }}/crls/{{ autonomy_org_name }}-{{ item.name }}.crl"
#   loop: "{{ ownca_certificate_authorities }}"
#   become: yes
#   tags:
#     - ownca_crl
#     - ownca-crl
#     - ownca_crl_debug
#     - ownca-crl-debug


# ==================================================================================================
#
# Imports the pkcs12 file into routeros's system certificates database.
#
# The old certificate must be removed before the new one can be installed.
#
# Steps:
# 1. TODO: Test if old certificates exist
# 2. TODO: Test if cert is newer than installed certificates
# 3. Remove old certs if both 1 and 2 are true.
# 4. Install new certs.
#
# ==================================================================================================
- name: "Remove old certificates from routeros."
  community.routeros.command:
    commands:
      - "/certificate remove {{ autonomy_fqdn }}.pkcs12_0"
      - "/certificate remove {{ autonomy_fqdn }}.pkcs12_1"
      - "/certificate remove {{ autonomy_fqdn }}.pkcs12_2"
      - "/certificate remove {{ autonomy_fqdn }}.pkcs12_3"
  tags:
    - ownca_host_certs
    - ownca-host-certs
    - ownca_host_certs_debug
    - ownca-host-certs-debug
    - ownca-bundles
    - ownca-all

- name: "Import certificate into routeros."
  community.routeros.command:
    commands:
      - "/certificate import file-name={{ autonomy_fqdn }}.pkcs12 passphrase={{ ownca_host_cert_pkcs12_password }}"
  tags:
    - ownca_host_certs
    - ownca-host-certs
    - ownca_host_certs_debug
    - ownca-host-certs-debug
    - ownca-bundles
    - ownca-all
